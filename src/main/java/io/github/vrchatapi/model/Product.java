/*
 * VRChat API Documentation
 *
 * The version of the OpenAPI document: 1.20.1
 * Contact: vrchatapi.lpv0t@aries.fyi
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.vrchatapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.vrchatapi.model.ProductType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.github.vrchatapi.JSON;

/**
 * Product
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Product {
  public static final String SERIALIZED_NAME_ARCHIVED = "archived";
  @SerializedName(SERIALIZED_NAME_ARCHIVED)
  private Boolean archived;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_GROUP_ACCESS = "groupAccess";
  @SerializedName(SERIALIZED_NAME_GROUP_ACCESS)
  private Boolean groupAccess = false;

  public static final String SERIALIZED_NAME_GROUP_ACCESS_REMOVE = "groupAccessRemove";
  @SerializedName(SERIALIZED_NAME_GROUP_ACCESS_REMOVE)
  private Boolean groupAccessRemove = false;

  public static final String SERIALIZED_NAME_GROUP_ID = "groupId";
  @SerializedName(SERIALIZED_NAME_GROUP_ID)
  private String groupId;

  public static final String SERIALIZED_NAME_GROUP_ROLE_ID = "groupRoleId";
  @SerializedName(SERIALIZED_NAME_GROUP_ROLE_ID)
  private String groupRoleId;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IMAGE_ID = "imageId";
  @SerializedName(SERIALIZED_NAME_IMAGE_ID)
  private String imageId;

  public static final String SERIALIZED_NAME_PARENT_LISTINGS = "parentListings";
  @SerializedName(SERIALIZED_NAME_PARENT_LISTINGS)
  private List<String> parentListings = new ArrayList<>();

  public static final String SERIALIZED_NAME_PRODUCT_TYPE = "productType";
  @SerializedName(SERIALIZED_NAME_PRODUCT_TYPE)
  private ProductType productType = ProductType.UDON;

  public static final String SERIALIZED_NAME_SELLER_DISPLAY_NAME = "sellerDisplayName";
  @SerializedName(SERIALIZED_NAME_SELLER_DISPLAY_NAME)
  private String sellerDisplayName;

  public static final String SERIALIZED_NAME_SELLER_ID = "sellerId";
  @SerializedName(SERIALIZED_NAME_SELLER_ID)
  private String sellerId;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = new ArrayList<>();

  public static final String SERIALIZED_NAME_UPDATED = "updated";
  @SerializedName(SERIALIZED_NAME_UPDATED)
  private OffsetDateTime updated;

  public static final String SERIALIZED_NAME_USE_FOR_SUBSCRIBER_LIST = "useForSubscriberList";
  @SerializedName(SERIALIZED_NAME_USE_FOR_SUBSCRIBER_LIST)
  private Boolean useForSubscriberList = false;

  public Product() {
  }

  public Product archived(Boolean archived) {
    
    this.archived = archived;
    return this;
  }

   /**
   * Get archived
   * @return archived
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getArchived() {
    return archived;
  }


  public void setArchived(Boolean archived) {
    this.archived = archived;
  }


  public Product created(OffsetDateTime created) {
    
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getCreated() {
    return created;
  }


  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }


  public Product description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public Product displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getDisplayName() {
    return displayName;
  }


  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public Product groupAccess(Boolean groupAccess) {
    
    this.groupAccess = groupAccess;
    return this;
  }

   /**
   * Get groupAccess
   * @return groupAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getGroupAccess() {
    return groupAccess;
  }


  public void setGroupAccess(Boolean groupAccess) {
    this.groupAccess = groupAccess;
  }


  public Product groupAccessRemove(Boolean groupAccessRemove) {
    
    this.groupAccessRemove = groupAccessRemove;
    return this;
  }

   /**
   * Get groupAccessRemove
   * @return groupAccessRemove
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getGroupAccessRemove() {
    return groupAccessRemove;
  }


  public void setGroupAccessRemove(Boolean groupAccessRemove) {
    this.groupAccessRemove = groupAccessRemove;
  }


  public Product groupId(String groupId) {
    
    this.groupId = groupId;
    return this;
  }

   /**
   * Get groupId
   * @return groupId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "grp_71a7ff59-112c-4e78-a990-c7cc650776e5", value = "")

  public String getGroupId() {
    return groupId;
  }


  public void setGroupId(String groupId) {
    this.groupId = groupId;
  }


  public Product groupRoleId(String groupRoleId) {
    
    this.groupRoleId = groupRoleId;
    return this;
  }

   /**
   * Get groupRoleId
   * @return groupRoleId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "grol_459d3911-f672-44bc-b84d-e54ffe7960fe", value = "")

  public String getGroupRoleId() {
    return groupRoleId;
  }


  public void setGroupRoleId(String groupRoleId) {
    this.groupRoleId = groupRoleId;
  }


  public Product id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "prod_bfbc2315-247a-44d7-bfea-5237f8d56cb4", required = true, value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public Product imageId(String imageId) {
    
    this.imageId = imageId;
    return this;
  }

   /**
   * Get imageId
   * @return imageId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "file_ce35d830-e20a-4df0-a6d4-5aaef4508044", required = true, value = "")

  public String getImageId() {
    return imageId;
  }


  public void setImageId(String imageId) {
    this.imageId = imageId;
  }


  public Product parentListings(List<String> parentListings) {
    
    this.parentListings = parentListings;
    return this;
  }

  public Product addParentListingsItem(String parentListingsItem) {
    this.parentListings.add(parentListingsItem);
    return this;
  }

   /**
   * Get parentListings
   * @return parentListings
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<String> getParentListings() {
    return parentListings;
  }


  public void setParentListings(List<String> parentListings) {
    this.parentListings = parentListings;
  }


  public Product productType(ProductType productType) {
    
    this.productType = productType;
    return this;
  }

   /**
   * Get productType
   * @return productType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public ProductType getProductType() {
    return productType;
  }


  public void setProductType(ProductType productType) {
    this.productType = productType;
  }


  public Product sellerDisplayName(String sellerDisplayName) {
    
    this.sellerDisplayName = sellerDisplayName;
    return this;
  }

   /**
   * Get sellerDisplayName
   * @return sellerDisplayName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getSellerDisplayName() {
    return sellerDisplayName;
  }


  public void setSellerDisplayName(String sellerDisplayName) {
    this.sellerDisplayName = sellerDisplayName;
  }


  public Product sellerId(String sellerId) {
    
    this.sellerId = sellerId;
    return this;
  }

   /**
   * Get sellerId
   * @return sellerId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getSellerId() {
    return sellerId;
  }


  public void setSellerId(String sellerId) {
    this.sellerId = sellerId;
  }


  public Product tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public Product addTagsItem(String tagsItem) {
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public Product updated(OffsetDateTime updated) {
    
    this.updated = updated;
    return this;
  }

   /**
   * Get updated
   * @return updated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getUpdated() {
    return updated;
  }


  public void setUpdated(OffsetDateTime updated) {
    this.updated = updated;
  }


  public Product useForSubscriberList(Boolean useForSubscriberList) {
    
    this.useForSubscriberList = useForSubscriberList;
    return this;
  }

   /**
   * Get useForSubscriberList
   * @return useForSubscriberList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getUseForSubscriberList() {
    return useForSubscriberList;
  }


  public void setUseForSubscriberList(Boolean useForSubscriberList) {
    this.useForSubscriberList = useForSubscriberList;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Product product = (Product) o;
    return Objects.equals(this.archived, product.archived) &&
        Objects.equals(this.created, product.created) &&
        Objects.equals(this.description, product.description) &&
        Objects.equals(this.displayName, product.displayName) &&
        Objects.equals(this.groupAccess, product.groupAccess) &&
        Objects.equals(this.groupAccessRemove, product.groupAccessRemove) &&
        Objects.equals(this.groupId, product.groupId) &&
        Objects.equals(this.groupRoleId, product.groupRoleId) &&
        Objects.equals(this.id, product.id) &&
        Objects.equals(this.imageId, product.imageId) &&
        Objects.equals(this.parentListings, product.parentListings) &&
        Objects.equals(this.productType, product.productType) &&
        Objects.equals(this.sellerDisplayName, product.sellerDisplayName) &&
        Objects.equals(this.sellerId, product.sellerId) &&
        Objects.equals(this.tags, product.tags) &&
        Objects.equals(this.updated, product.updated) &&
        Objects.equals(this.useForSubscriberList, product.useForSubscriberList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(archived, created, description, displayName, groupAccess, groupAccessRemove, groupId, groupRoleId, id, imageId, parentListings, productType, sellerDisplayName, sellerId, tags, updated, useForSubscriberList);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Product {\n");
    sb.append("    archived: ").append(toIndentedString(archived)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    groupAccess: ").append(toIndentedString(groupAccess)).append("\n");
    sb.append("    groupAccessRemove: ").append(toIndentedString(groupAccessRemove)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    groupRoleId: ").append(toIndentedString(groupRoleId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    imageId: ").append(toIndentedString(imageId)).append("\n");
    sb.append("    parentListings: ").append(toIndentedString(parentListings)).append("\n");
    sb.append("    productType: ").append(toIndentedString(productType)).append("\n");
    sb.append("    sellerDisplayName: ").append(toIndentedString(sellerDisplayName)).append("\n");
    sb.append("    sellerId: ").append(toIndentedString(sellerId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    useForSubscriberList: ").append(toIndentedString(useForSubscriberList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("archived");
    openapiFields.add("created");
    openapiFields.add("description");
    openapiFields.add("displayName");
    openapiFields.add("groupAccess");
    openapiFields.add("groupAccessRemove");
    openapiFields.add("groupId");
    openapiFields.add("groupRoleId");
    openapiFields.add("id");
    openapiFields.add("imageId");
    openapiFields.add("parentListings");
    openapiFields.add("productType");
    openapiFields.add("sellerDisplayName");
    openapiFields.add("sellerId");
    openapiFields.add("tags");
    openapiFields.add("updated");
    openapiFields.add("useForSubscriberList");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("archived");
    openapiRequiredFields.add("created");
    openapiRequiredFields.add("description");
    openapiRequiredFields.add("displayName");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("imageId");
    openapiRequiredFields.add("parentListings");
    openapiRequiredFields.add("productType");
    openapiRequiredFields.add("sellerDisplayName");
    openapiRequiredFields.add("sellerId");
    openapiRequiredFields.add("tags");
    openapiRequiredFields.add("updated");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Product
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!Product.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Product is not found in the empty JSON string", Product.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!Product.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Product` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Product.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if (!jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("groupId") != null && !jsonObj.get("groupId").isJsonNull()) && !jsonObj.get("groupId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `groupId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("groupId").toString()));
      }
      if ((jsonObj.get("groupRoleId") != null && !jsonObj.get("groupRoleId").isJsonNull()) && !jsonObj.get("groupRoleId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `groupRoleId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("groupRoleId").toString()));
      }
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (!jsonObj.get("imageId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imageId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imageId").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("parentListings") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("parentListings").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentListings` to be an array in the JSON string but got `%s`", jsonObj.get("parentListings").toString()));
      }
      if (!jsonObj.get("sellerDisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sellerDisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sellerDisplayName").toString()));
      }
      if (!jsonObj.get("sellerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sellerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sellerId").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("tags") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Product.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Product' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Product> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Product.class));

       return (TypeAdapter<T>) new TypeAdapter<Product>() {
           @Override
           public void write(JsonWriter out, Product value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Product read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Product given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Product
  * @throws IOException if the JSON string is invalid with respect to Product
  */
  public static Product fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Product.class);
  }

 /**
  * Convert an instance of Product to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

