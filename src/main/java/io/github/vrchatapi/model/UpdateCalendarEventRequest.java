/*
 * VRChat API Documentation
 *
 * The version of the OpenAPI document: 1.20.4
 * Contact: vrchatapi.lpv0t@aries.fyi
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.vrchatapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.github.vrchatapi.JSON;

/**
 * UpdateCalendarEventRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UpdateCalendarEventRequest {
  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_STARTS_AT = "startsAt";
  @SerializedName(SERIALIZED_NAME_STARTS_AT)
  private OffsetDateTime startsAt;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ENDS_AT = "endsAt";
  @SerializedName(SERIALIZED_NAME_ENDS_AT)
  private OffsetDateTime endsAt;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = null;

  public static final String SERIALIZED_NAME_IS_DRAFT = "isDraft";
  @SerializedName(SERIALIZED_NAME_IS_DRAFT)
  private Boolean isDraft;

  public static final String SERIALIZED_NAME_IMAGE_ID = "imageId";
  @SerializedName(SERIALIZED_NAME_IMAGE_ID)
  private String imageId;

  public static final String SERIALIZED_NAME_ROLE_IDS = "roleIds";
  @SerializedName(SERIALIZED_NAME_ROLE_IDS)
  private List<String> roleIds = null;

  public static final String SERIALIZED_NAME_PARENT_ID = "parentId";
  @SerializedName(SERIALIZED_NAME_PARENT_ID)
  private String parentId;

  public static final String SERIALIZED_NAME_PLATFORMS = "platforms";
  @SerializedName(SERIALIZED_NAME_PLATFORMS)
  private List<String> platforms = null;

  public static final String SERIALIZED_NAME_LANGUAGES = "languages";
  @SerializedName(SERIALIZED_NAME_LANGUAGES)
  private List<String> languages = null;

  public static final String SERIALIZED_NAME_SEND_CREATION_NOTIFICATION = "sendCreationNotification";
  @SerializedName(SERIALIZED_NAME_SEND_CREATION_NOTIFICATION)
  private Boolean sendCreationNotification = false;

  public static final String SERIALIZED_NAME_FEATURED = "featured";
  @SerializedName(SERIALIZED_NAME_FEATURED)
  private Boolean featured;

  public static final String SERIALIZED_NAME_HOST_EARLY_JOIN_MINUTES = "hostEarlyJoinMinutes";
  @SerializedName(SERIALIZED_NAME_HOST_EARLY_JOIN_MINUTES)
  private Integer hostEarlyJoinMinutes;

  public static final String SERIALIZED_NAME_GUEST_EARLY_JOIN_MINUTES = "guestEarlyJoinMinutes";
  @SerializedName(SERIALIZED_NAME_GUEST_EARLY_JOIN_MINUTES)
  private Integer guestEarlyJoinMinutes;

  public static final String SERIALIZED_NAME_CLOSE_INSTANCE_AFTER_END_MINUTES = "closeInstanceAfterEndMinutes";
  @SerializedName(SERIALIZED_NAME_CLOSE_INSTANCE_AFTER_END_MINUTES)
  private Integer closeInstanceAfterEndMinutes;

  public static final String SERIALIZED_NAME_USES_INSTANCE_OVERFLOW = "usesInstanceOverflow";
  @SerializedName(SERIALIZED_NAME_USES_INSTANCE_OVERFLOW)
  private Boolean usesInstanceOverflow;

  public UpdateCalendarEventRequest() {
  }

  public UpdateCalendarEventRequest title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Event title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Performance Event!", value = "Event title")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public UpdateCalendarEventRequest startsAt(OffsetDateTime startsAt) {
    
    this.startsAt = startsAt;
    return this;
  }

   /**
   * Time the vent starts at
   * @return startsAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Time the vent starts at")

  public OffsetDateTime getStartsAt() {
    return startsAt;
  }


  public void setStartsAt(OffsetDateTime startsAt) {
    this.startsAt = startsAt;
  }


  public UpdateCalendarEventRequest description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public UpdateCalendarEventRequest endsAt(OffsetDateTime endsAt) {
    
    this.endsAt = endsAt;
    return this;
  }

   /**
   * Time the vent starts at
   * @return endsAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Time the vent starts at")

  public OffsetDateTime getEndsAt() {
    return endsAt;
  }


  public void setEndsAt(OffsetDateTime endsAt) {
    this.endsAt = endsAt;
  }


  public UpdateCalendarEventRequest category(String category) {
    
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "performance", value = "")

  public String getCategory() {
    return category;
  }


  public void setCategory(String category) {
    this.category = category;
  }


  public UpdateCalendarEventRequest tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public UpdateCalendarEventRequest addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public UpdateCalendarEventRequest isDraft(Boolean isDraft) {
    
    this.isDraft = isDraft;
    return this;
  }

   /**
   * Get isDraft
   * @return isDraft
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsDraft() {
    return isDraft;
  }


  public void setIsDraft(Boolean isDraft) {
    this.isDraft = isDraft;
  }


  public UpdateCalendarEventRequest imageId(String imageId) {
    
    this.imageId = imageId;
    return this;
  }

   /**
   * Get imageId
   * @return imageId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "file_ce35d830-e20a-4df0-a6d4-5aaef4508044", value = "")

  public String getImageId() {
    return imageId;
  }


  public void setImageId(String imageId) {
    this.imageId = imageId;
  }


  public UpdateCalendarEventRequest roleIds(List<String> roleIds) {
    
    this.roleIds = roleIds;
    return this;
  }

  public UpdateCalendarEventRequest addRoleIdsItem(String roleIdsItem) {
    if (this.roleIds == null) {
      this.roleIds = new ArrayList<>();
    }
    this.roleIds.add(roleIdsItem);
    return this;
  }

   /**
   * Get roleIds
   * @return roleIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getRoleIds() {
    return roleIds;
  }


  public void setRoleIds(List<String> roleIds) {
    this.roleIds = roleIds;
  }


  public UpdateCalendarEventRequest parentId(String parentId) {
    
    this.parentId = parentId;
    return this;
  }

   /**
   * Get parentId
   * @return parentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getParentId() {
    return parentId;
  }


  public void setParentId(String parentId) {
    this.parentId = parentId;
  }


  public UpdateCalendarEventRequest platforms(List<String> platforms) {
    
    this.platforms = platforms;
    return this;
  }

  public UpdateCalendarEventRequest addPlatformsItem(String platformsItem) {
    if (this.platforms == null) {
      this.platforms = new ArrayList<>();
    }
    this.platforms.add(platformsItem);
    return this;
  }

   /**
   * Get platforms
   * @return platforms
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getPlatforms() {
    return platforms;
  }


  public void setPlatforms(List<String> platforms) {
    this.platforms = platforms;
  }


  public UpdateCalendarEventRequest languages(List<String> languages) {
    
    this.languages = languages;
    return this;
  }

  public UpdateCalendarEventRequest addLanguagesItem(String languagesItem) {
    if (this.languages == null) {
      this.languages = new ArrayList<>();
    }
    this.languages.add(languagesItem);
    return this;
  }

   /**
   * Get languages
   * @return languages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getLanguages() {
    return languages;
  }


  public void setLanguages(List<String> languages) {
    this.languages = languages;
  }


  public UpdateCalendarEventRequest sendCreationNotification(Boolean sendCreationNotification) {
    
    this.sendCreationNotification = sendCreationNotification;
    return this;
  }

   /**
   * Send notification to group members.
   * @return sendCreationNotification
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Send notification to group members.")

  public Boolean getSendCreationNotification() {
    return sendCreationNotification;
  }


  public void setSendCreationNotification(Boolean sendCreationNotification) {
    this.sendCreationNotification = sendCreationNotification;
  }


  public UpdateCalendarEventRequest featured(Boolean featured) {
    
    this.featured = featured;
    return this;
  }

   /**
   * Get featured
   * @return featured
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getFeatured() {
    return featured;
  }


  public void setFeatured(Boolean featured) {
    this.featured = featured;
  }


  public UpdateCalendarEventRequest hostEarlyJoinMinutes(Integer hostEarlyJoinMinutes) {
    
    this.hostEarlyJoinMinutes = hostEarlyJoinMinutes;
    return this;
  }

   /**
   * Get hostEarlyJoinMinutes
   * @return hostEarlyJoinMinutes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "60", value = "")

  public Integer getHostEarlyJoinMinutes() {
    return hostEarlyJoinMinutes;
  }


  public void setHostEarlyJoinMinutes(Integer hostEarlyJoinMinutes) {
    this.hostEarlyJoinMinutes = hostEarlyJoinMinutes;
  }


  public UpdateCalendarEventRequest guestEarlyJoinMinutes(Integer guestEarlyJoinMinutes) {
    
    this.guestEarlyJoinMinutes = guestEarlyJoinMinutes;
    return this;
  }

   /**
   * Get guestEarlyJoinMinutes
   * @return guestEarlyJoinMinutes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5", value = "")

  public Integer getGuestEarlyJoinMinutes() {
    return guestEarlyJoinMinutes;
  }


  public void setGuestEarlyJoinMinutes(Integer guestEarlyJoinMinutes) {
    this.guestEarlyJoinMinutes = guestEarlyJoinMinutes;
  }


  public UpdateCalendarEventRequest closeInstanceAfterEndMinutes(Integer closeInstanceAfterEndMinutes) {
    
    this.closeInstanceAfterEndMinutes = closeInstanceAfterEndMinutes;
    return this;
  }

   /**
   * Get closeInstanceAfterEndMinutes
   * @return closeInstanceAfterEndMinutes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5", value = "")

  public Integer getCloseInstanceAfterEndMinutes() {
    return closeInstanceAfterEndMinutes;
  }


  public void setCloseInstanceAfterEndMinutes(Integer closeInstanceAfterEndMinutes) {
    this.closeInstanceAfterEndMinutes = closeInstanceAfterEndMinutes;
  }


  public UpdateCalendarEventRequest usesInstanceOverflow(Boolean usesInstanceOverflow) {
    
    this.usesInstanceOverflow = usesInstanceOverflow;
    return this;
  }

   /**
   * Get usesInstanceOverflow
   * @return usesInstanceOverflow
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getUsesInstanceOverflow() {
    return usesInstanceOverflow;
  }


  public void setUsesInstanceOverflow(Boolean usesInstanceOverflow) {
    this.usesInstanceOverflow = usesInstanceOverflow;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateCalendarEventRequest updateCalendarEventRequest = (UpdateCalendarEventRequest) o;
    return Objects.equals(this.title, updateCalendarEventRequest.title) &&
        Objects.equals(this.startsAt, updateCalendarEventRequest.startsAt) &&
        Objects.equals(this.description, updateCalendarEventRequest.description) &&
        Objects.equals(this.endsAt, updateCalendarEventRequest.endsAt) &&
        Objects.equals(this.category, updateCalendarEventRequest.category) &&
        Objects.equals(this.tags, updateCalendarEventRequest.tags) &&
        Objects.equals(this.isDraft, updateCalendarEventRequest.isDraft) &&
        Objects.equals(this.imageId, updateCalendarEventRequest.imageId) &&
        Objects.equals(this.roleIds, updateCalendarEventRequest.roleIds) &&
        Objects.equals(this.parentId, updateCalendarEventRequest.parentId) &&
        Objects.equals(this.platforms, updateCalendarEventRequest.platforms) &&
        Objects.equals(this.languages, updateCalendarEventRequest.languages) &&
        Objects.equals(this.sendCreationNotification, updateCalendarEventRequest.sendCreationNotification) &&
        Objects.equals(this.featured, updateCalendarEventRequest.featured) &&
        Objects.equals(this.hostEarlyJoinMinutes, updateCalendarEventRequest.hostEarlyJoinMinutes) &&
        Objects.equals(this.guestEarlyJoinMinutes, updateCalendarEventRequest.guestEarlyJoinMinutes) &&
        Objects.equals(this.closeInstanceAfterEndMinutes, updateCalendarEventRequest.closeInstanceAfterEndMinutes) &&
        Objects.equals(this.usesInstanceOverflow, updateCalendarEventRequest.usesInstanceOverflow);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, startsAt, description, endsAt, category, tags, isDraft, imageId, roleIds, parentId, platforms, languages, sendCreationNotification, featured, hostEarlyJoinMinutes, guestEarlyJoinMinutes, closeInstanceAfterEndMinutes, usesInstanceOverflow);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateCalendarEventRequest {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    startsAt: ").append(toIndentedString(startsAt)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    endsAt: ").append(toIndentedString(endsAt)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    isDraft: ").append(toIndentedString(isDraft)).append("\n");
    sb.append("    imageId: ").append(toIndentedString(imageId)).append("\n");
    sb.append("    roleIds: ").append(toIndentedString(roleIds)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    platforms: ").append(toIndentedString(platforms)).append("\n");
    sb.append("    languages: ").append(toIndentedString(languages)).append("\n");
    sb.append("    sendCreationNotification: ").append(toIndentedString(sendCreationNotification)).append("\n");
    sb.append("    featured: ").append(toIndentedString(featured)).append("\n");
    sb.append("    hostEarlyJoinMinutes: ").append(toIndentedString(hostEarlyJoinMinutes)).append("\n");
    sb.append("    guestEarlyJoinMinutes: ").append(toIndentedString(guestEarlyJoinMinutes)).append("\n");
    sb.append("    closeInstanceAfterEndMinutes: ").append(toIndentedString(closeInstanceAfterEndMinutes)).append("\n");
    sb.append("    usesInstanceOverflow: ").append(toIndentedString(usesInstanceOverflow)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("title");
    openapiFields.add("startsAt");
    openapiFields.add("description");
    openapiFields.add("endsAt");
    openapiFields.add("category");
    openapiFields.add("tags");
    openapiFields.add("isDraft");
    openapiFields.add("imageId");
    openapiFields.add("roleIds");
    openapiFields.add("parentId");
    openapiFields.add("platforms");
    openapiFields.add("languages");
    openapiFields.add("sendCreationNotification");
    openapiFields.add("featured");
    openapiFields.add("hostEarlyJoinMinutes");
    openapiFields.add("guestEarlyJoinMinutes");
    openapiFields.add("closeInstanceAfterEndMinutes");
    openapiFields.add("usesInstanceOverflow");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to UpdateCalendarEventRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!UpdateCalendarEventRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateCalendarEventRequest is not found in the empty JSON string", UpdateCalendarEventRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!UpdateCalendarEventRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateCalendarEventRequest` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("category") != null && !jsonObj.get("category").isJsonNull()) && !jsonObj.get("category").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
      if ((jsonObj.get("imageId") != null && !jsonObj.get("imageId").isJsonNull()) && !jsonObj.get("imageId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imageId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imageId").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("roleIds") != null && !jsonObj.get("roleIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `roleIds` to be an array in the JSON string but got `%s`", jsonObj.get("roleIds").toString()));
      }
      if ((jsonObj.get("parentId") != null && !jsonObj.get("parentId").isJsonNull()) && !jsonObj.get("parentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentId").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("platforms") != null && !jsonObj.get("platforms").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `platforms` to be an array in the JSON string but got `%s`", jsonObj.get("platforms").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("languages") != null && !jsonObj.get("languages").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `languages` to be an array in the JSON string but got `%s`", jsonObj.get("languages").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateCalendarEventRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateCalendarEventRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateCalendarEventRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateCalendarEventRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateCalendarEventRequest>() {
           @Override
           public void write(JsonWriter out, UpdateCalendarEventRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateCalendarEventRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UpdateCalendarEventRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UpdateCalendarEventRequest
  * @throws IOException if the JSON string is invalid with respect to UpdateCalendarEventRequest
  */
  public static UpdateCalendarEventRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateCalendarEventRequest.class);
  }

 /**
  * Convert an instance of UpdateCalendarEventRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

