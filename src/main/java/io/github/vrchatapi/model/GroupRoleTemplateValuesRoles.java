/*
 * VRChat API Documentation
 *
 * The version of the OpenAPI document: 1.20.4
 * Contact: vrchatapi.lpv0t@aries.fyi
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.vrchatapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.vrchatapi.model.GroupPermissions;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.github.vrchatapi.JSON;

/**
 * GroupRoleTemplateValuesRoles
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GroupRoleTemplateValuesRoles {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_BASE_PERMISSIONS = "basePermissions";
  @SerializedName(SERIALIZED_NAME_BASE_PERMISSIONS)
  private List<GroupPermissions> basePermissions = null;

  public static final String SERIALIZED_NAME_IS_ADDED_ON_JOIN = "isAddedOnJoin";
  @SerializedName(SERIALIZED_NAME_IS_ADDED_ON_JOIN)
  private Boolean isAddedOnJoin = false;

  public GroupRoleTemplateValuesRoles() {
  }

  public GroupRoleTemplateValuesRoles description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public GroupRoleTemplateValuesRoles name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public GroupRoleTemplateValuesRoles basePermissions(List<GroupPermissions> basePermissions) {
    
    this.basePermissions = basePermissions;
    return this;
  }

  public GroupRoleTemplateValuesRoles addBasePermissionsItem(GroupPermissions basePermissionsItem) {
    if (this.basePermissions == null) {
      this.basePermissions = new ArrayList<>();
    }
    this.basePermissions.add(basePermissionsItem);
    return this;
  }

   /**
   * Get basePermissions
   * @return basePermissions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<GroupPermissions> getBasePermissions() {
    return basePermissions;
  }


  public void setBasePermissions(List<GroupPermissions> basePermissions) {
    this.basePermissions = basePermissions;
  }


  public GroupRoleTemplateValuesRoles isAddedOnJoin(Boolean isAddedOnJoin) {
    
    this.isAddedOnJoin = isAddedOnJoin;
    return this;
  }

   /**
   * Get isAddedOnJoin
   * @return isAddedOnJoin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsAddedOnJoin() {
    return isAddedOnJoin;
  }


  public void setIsAddedOnJoin(Boolean isAddedOnJoin) {
    this.isAddedOnJoin = isAddedOnJoin;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupRoleTemplateValuesRoles groupRoleTemplateValuesRoles = (GroupRoleTemplateValuesRoles) o;
    return Objects.equals(this.description, groupRoleTemplateValuesRoles.description) &&
        Objects.equals(this.name, groupRoleTemplateValuesRoles.name) &&
        Objects.equals(this.basePermissions, groupRoleTemplateValuesRoles.basePermissions) &&
        Objects.equals(this.isAddedOnJoin, groupRoleTemplateValuesRoles.isAddedOnJoin);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, name, basePermissions, isAddedOnJoin);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupRoleTemplateValuesRoles {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    basePermissions: ").append(toIndentedString(basePermissions)).append("\n");
    sb.append("    isAddedOnJoin: ").append(toIndentedString(isAddedOnJoin)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("name");
    openapiFields.add("basePermissions");
    openapiFields.add("isAddedOnJoin");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to GroupRoleTemplateValuesRoles
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!GroupRoleTemplateValuesRoles.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GroupRoleTemplateValuesRoles is not found in the empty JSON string", GroupRoleTemplateValuesRoles.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!GroupRoleTemplateValuesRoles.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GroupRoleTemplateValuesRoles` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("basePermissions") != null && !jsonObj.get("basePermissions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `basePermissions` to be an array in the JSON string but got `%s`", jsonObj.get("basePermissions").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GroupRoleTemplateValuesRoles.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GroupRoleTemplateValuesRoles' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GroupRoleTemplateValuesRoles> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GroupRoleTemplateValuesRoles.class));

       return (TypeAdapter<T>) new TypeAdapter<GroupRoleTemplateValuesRoles>() {
           @Override
           public void write(JsonWriter out, GroupRoleTemplateValuesRoles value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GroupRoleTemplateValuesRoles read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GroupRoleTemplateValuesRoles given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GroupRoleTemplateValuesRoles
  * @throws IOException if the JSON string is invalid with respect to GroupRoleTemplateValuesRoles
  */
  public static GroupRoleTemplateValuesRoles fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GroupRoleTemplateValuesRoles.class);
  }

 /**
  * Convert an instance of GroupRoleTemplateValuesRoles to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

