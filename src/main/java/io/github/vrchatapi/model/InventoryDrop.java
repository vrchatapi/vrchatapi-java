/*
 * VRChat API Documentation
 *
 * The version of the OpenAPI document: 1.20.1
 * Contact: vrchatapi.lpv0t@aries.fyi
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.vrchatapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.vrchatapi.model.InventoryNotificationDetails;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.github.vrchatapi.JSON;

/**
 * InventoryDrop
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InventoryDrop {
  public static final String SERIALIZED_NAME_AUTHOR_ID = "authorId";
  @SerializedName(SERIALIZED_NAME_AUTHOR_ID)
  private String authorId;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_DROP_EXPIRY_DATE = "dropExpiryDate";
  @SerializedName(SERIALIZED_NAME_DROP_EXPIRY_DATE)
  private OffsetDateTime dropExpiryDate;

  public static final String SERIALIZED_NAME_END_DROP_DATE = "endDropDate";
  @SerializedName(SERIALIZED_NAME_END_DROP_DATE)
  private OffsetDateTime endDropDate;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NOTIFICATION_DETAILS = "notificationDetails";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_DETAILS)
  private InventoryNotificationDetails notificationDetails;

  public static final String SERIALIZED_NAME_START_DROP_DATE = "startDropDate";
  @SerializedName(SERIALIZED_NAME_START_DROP_DATE)
  private OffsetDateTime startDropDate;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = new ArrayList<>();

  public static final String SERIALIZED_NAME_TARGET_GROUP = "targetGroup";
  @SerializedName(SERIALIZED_NAME_TARGET_GROUP)
  private String targetGroup;

  public static final String SERIALIZED_NAME_TEMPLATE_IDS = "templateIds";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_IDS)
  private List<String> templateIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public InventoryDrop() {
  }

  public InventoryDrop authorId(String authorId) {
    
    this.authorId = authorId;
    return this;
  }

   /**
   * A users unique ID, usually in the form of &#x60;usr_c1644b5b-3ca4-45b4-97c6-a2a0de70d469&#x60;. Legacy players can have old IDs in the form of &#x60;8JoV9XEdpo&#x60;. The ID can never be changed.
   * @return authorId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "usr_c1644b5b-3ca4-45b4-97c6-a2a0de70d469", required = true, value = "A users unique ID, usually in the form of `usr_c1644b5b-3ca4-45b4-97c6-a2a0de70d469`. Legacy players can have old IDs in the form of `8JoV9XEdpo`. The ID can never be changed.")

  public String getAuthorId() {
    return authorId;
  }


  public void setAuthorId(String authorId) {
    this.authorId = authorId;
  }


  public InventoryDrop createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2025-06-10T20:37:31.837Z", required = true, value = "")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public InventoryDrop dropExpiryDate(OffsetDateTime dropExpiryDate) {
    
    this.dropExpiryDate = dropExpiryDate;
    return this;
  }

   /**
   * Get dropExpiryDate
   * @return dropExpiryDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getDropExpiryDate() {
    return dropExpiryDate;
  }


  public void setDropExpiryDate(OffsetDateTime dropExpiryDate) {
    this.dropExpiryDate = dropExpiryDate;
  }


  public InventoryDrop endDropDate(OffsetDateTime endDropDate) {
    
    this.endDropDate = endDropDate;
    return this;
  }

   /**
   * Get endDropDate
   * @return endDropDate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2184-07-24T00:00Z", required = true, value = "")

  public OffsetDateTime getEndDropDate() {
    return endDropDate;
  }


  public void setEndDropDate(OffsetDateTime endDropDate) {
    this.endDropDate = endDropDate;
  }


  public InventoryDrop id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "invd_ee3a8f7f-1454-4748-a935-99bf9865f33d", required = true, value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public InventoryDrop name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public InventoryDrop notificationDetails(InventoryNotificationDetails notificationDetails) {
    
    this.notificationDetails = notificationDetails;
    return this;
  }

   /**
   * Get notificationDetails
   * @return notificationDetails
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public InventoryNotificationDetails getNotificationDetails() {
    return notificationDetails;
  }


  public void setNotificationDetails(InventoryNotificationDetails notificationDetails) {
    this.notificationDetails = notificationDetails;
  }


  public InventoryDrop startDropDate(OffsetDateTime startDropDate) {
    
    this.startDropDate = startDropDate;
    return this;
  }

   /**
   * Get startDropDate
   * @return startDropDate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2025-06-09T10:00Z", required = true, value = "")

  public OffsetDateTime getStartDropDate() {
    return startDropDate;
  }


  public void setStartDropDate(OffsetDateTime startDropDate) {
    this.startDropDate = startDropDate;
  }


  public InventoryDrop status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "active", required = true, value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public InventoryDrop tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public InventoryDrop addTagsItem(String tagsItem) {
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public InventoryDrop targetGroup(String targetGroup) {
    
    this.targetGroup = targetGroup;
    return this;
  }

   /**
   * Get targetGroup
   * @return targetGroup
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "everyone", required = true, value = "")

  public String getTargetGroup() {
    return targetGroup;
  }


  public void setTargetGroup(String targetGroup) {
    this.targetGroup = targetGroup;
  }


  public InventoryDrop templateIds(List<String> templateIds) {
    
    this.templateIds = templateIds;
    return this;
  }

  public InventoryDrop addTemplateIdsItem(String templateIdsItem) {
    this.templateIds.add(templateIdsItem);
    return this;
  }

   /**
   * Get templateIds
   * @return templateIds
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<String> getTemplateIds() {
    return templateIds;
  }


  public void setTemplateIds(List<String> templateIds) {
    this.templateIds = templateIds;
  }


  public InventoryDrop updatedAt(OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2025-06-10T20:37:31.837Z", required = true, value = "")

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InventoryDrop inventoryDrop = (InventoryDrop) o;
    return Objects.equals(this.authorId, inventoryDrop.authorId) &&
        Objects.equals(this.createdAt, inventoryDrop.createdAt) &&
        Objects.equals(this.dropExpiryDate, inventoryDrop.dropExpiryDate) &&
        Objects.equals(this.endDropDate, inventoryDrop.endDropDate) &&
        Objects.equals(this.id, inventoryDrop.id) &&
        Objects.equals(this.name, inventoryDrop.name) &&
        Objects.equals(this.notificationDetails, inventoryDrop.notificationDetails) &&
        Objects.equals(this.startDropDate, inventoryDrop.startDropDate) &&
        Objects.equals(this.status, inventoryDrop.status) &&
        Objects.equals(this.tags, inventoryDrop.tags) &&
        Objects.equals(this.targetGroup, inventoryDrop.targetGroup) &&
        Objects.equals(this.templateIds, inventoryDrop.templateIds) &&
        Objects.equals(this.updatedAt, inventoryDrop.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authorId, createdAt, dropExpiryDate, endDropDate, id, name, notificationDetails, startDropDate, status, tags, targetGroup, templateIds, updatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InventoryDrop {\n");
    sb.append("    authorId: ").append(toIndentedString(authorId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    dropExpiryDate: ").append(toIndentedString(dropExpiryDate)).append("\n");
    sb.append("    endDropDate: ").append(toIndentedString(endDropDate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    notificationDetails: ").append(toIndentedString(notificationDetails)).append("\n");
    sb.append("    startDropDate: ").append(toIndentedString(startDropDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    targetGroup: ").append(toIndentedString(targetGroup)).append("\n");
    sb.append("    templateIds: ").append(toIndentedString(templateIds)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("authorId");
    openapiFields.add("created_at");
    openapiFields.add("dropExpiryDate");
    openapiFields.add("endDropDate");
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("notificationDetails");
    openapiFields.add("startDropDate");
    openapiFields.add("status");
    openapiFields.add("tags");
    openapiFields.add("targetGroup");
    openapiFields.add("templateIds");
    openapiFields.add("updated_at");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("authorId");
    openapiRequiredFields.add("created_at");
    openapiRequiredFields.add("dropExpiryDate");
    openapiRequiredFields.add("endDropDate");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("notificationDetails");
    openapiRequiredFields.add("startDropDate");
    openapiRequiredFields.add("status");
    openapiRequiredFields.add("tags");
    openapiRequiredFields.add("targetGroup");
    openapiRequiredFields.add("templateIds");
    openapiRequiredFields.add("updated_at");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to InventoryDrop
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!InventoryDrop.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InventoryDrop is not found in the empty JSON string", InventoryDrop.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!InventoryDrop.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InventoryDrop` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : InventoryDrop.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("authorId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authorId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authorId").toString()));
      }
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the required field `notificationDetails`
      InventoryNotificationDetails.validateJsonObject(jsonObj.getAsJsonObject("notificationDetails"));
      if (!jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("tags") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
      if (!jsonObj.get("targetGroup").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetGroup` to be a primitive type in the JSON string but got `%s`", jsonObj.get("targetGroup").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("templateIds") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("templateIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `templateIds` to be an array in the JSON string but got `%s`", jsonObj.get("templateIds").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InventoryDrop.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InventoryDrop' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InventoryDrop> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InventoryDrop.class));

       return (TypeAdapter<T>) new TypeAdapter<InventoryDrop>() {
           @Override
           public void write(JsonWriter out, InventoryDrop value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InventoryDrop read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of InventoryDrop given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of InventoryDrop
  * @throws IOException if the JSON string is invalid with respect to InventoryDrop
  */
  public static InventoryDrop fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InventoryDrop.class);
  }

 /**
  * Convert an instance of InventoryDrop to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

