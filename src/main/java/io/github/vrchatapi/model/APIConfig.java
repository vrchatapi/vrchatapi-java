/*
 * VRChat API Documentation
 *
 * The version of the OpenAPI document: 1.19.4
 * Contact: vrchatapi.lpv0t@aries.fyi
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.vrchatapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.vrchatapi.model.APIConfigAccessLogsUrls;
import io.github.vrchatapi.model.APIConfigAnnouncement;
import io.github.vrchatapi.model.APIConfigAvatarPerfLimiter;
import io.github.vrchatapi.model.APIConfigConstants;
import io.github.vrchatapi.model.APIConfigDownloadURLList;
import io.github.vrchatapi.model.APIConfigEvents;
import io.github.vrchatapi.model.APIConfigMinSupportedClientBuildNumber;
import io.github.vrchatapi.model.APIConfigOfflineAnalysis;
import io.github.vrchatapi.model.APIConfigReportCategories;
import io.github.vrchatapi.model.APIConfigReportOptions;
import io.github.vrchatapi.model.APIConfigReportReasons;
import io.github.vrchatapi.model.DynamicContentRow;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.github.vrchatapi.JSON;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class APIConfig {
  public static final String SERIALIZED_NAME_VOICE_ENABLE_DEGRADATION = "VoiceEnableDegradation";
  @SerializedName(SERIALIZED_NAME_VOICE_ENABLE_DEGRADATION)
  private Boolean voiceEnableDegradation = false;

  public static final String SERIALIZED_NAME_VOICE_ENABLE_RECEIVER_LIMITING = "VoiceEnableReceiverLimiting";
  @SerializedName(SERIALIZED_NAME_VOICE_ENABLE_RECEIVER_LIMITING)
  private Boolean voiceEnableReceiverLimiting = true;

  public static final String SERIALIZED_NAME_ACCESS_LOGS_URLS = "accessLogsUrls";
  @SerializedName(SERIALIZED_NAME_ACCESS_LOGS_URLS)
  private APIConfigAccessLogsUrls accessLogsUrls;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address;

  public static final String SERIALIZED_NAME_AGE_VERIFICATION_INVITE_VISIBLE = "ageVerificationInviteVisible";
  @SerializedName(SERIALIZED_NAME_AGE_VERIFICATION_INVITE_VISIBLE)
  private Boolean ageVerificationInviteVisible;

  public static final String SERIALIZED_NAME_AGE_VERIFICATION_P = "ageVerificationP";
  @SerializedName(SERIALIZED_NAME_AGE_VERIFICATION_P)
  private Boolean ageVerificationP;

  public static final String SERIALIZED_NAME_AGE_VERIFICATION_STATUS_VISIBLE = "ageVerificationStatusVisible";
  @SerializedName(SERIALIZED_NAME_AGE_VERIFICATION_STATUS_VISIBLE)
  private Boolean ageVerificationStatusVisible;

  public static final String SERIALIZED_NAME_ANALYSIS_MAX_RETRIES = "analysisMaxRetries";
  @SerializedName(SERIALIZED_NAME_ANALYSIS_MAX_RETRIES)
  private Integer analysisMaxRetries;

  public static final String SERIALIZED_NAME_ANALYSIS_RETRY_INTERVAL = "analysisRetryInterval";
  @SerializedName(SERIALIZED_NAME_ANALYSIS_RETRY_INTERVAL)
  private Integer analysisRetryInterval;

  public static final String SERIALIZED_NAME_ANNOUNCEMENTS = "announcements";
  @SerializedName(SERIALIZED_NAME_ANNOUNCEMENTS)
  private Set<APIConfigAnnouncement> announcements = new LinkedHashSet<>();

  public static final String SERIALIZED_NAME_ANALYTICS_SEGMENT_NEW_U_I_PCT_OF_USERS = "analyticsSegment_NewUI_PctOfUsers";
  @SerializedName(SERIALIZED_NAME_ANALYTICS_SEGMENT_NEW_U_I_PCT_OF_USERS)
  private Integer analyticsSegmentNewUIPctOfUsers;

  public static final String SERIALIZED_NAME_ANALYTICS_SEGMENT_NEW_U_I_SALT = "analyticsSegment_NewUI_Salt";
  @SerializedName(SERIALIZED_NAME_ANALYTICS_SEGMENT_NEW_U_I_SALT)
  private String analyticsSegmentNewUISalt;

  public static final String SERIALIZED_NAME_AVAILABLE_LANGUAGE_CODES = "availableLanguageCodes";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_LANGUAGE_CODES)
  private List<String> availableLanguageCodes = new ArrayList<>();

  public static final String SERIALIZED_NAME_AVAILABLE_LANGUAGES = "availableLanguages";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_LANGUAGES)
  private List<String> availableLanguages = new ArrayList<>();

  public static final String SERIALIZED_NAME_AVATAR_PERF_LIMITER = "avatarPerfLimiter";
  @SerializedName(SERIALIZED_NAME_AVATAR_PERF_LIMITER)
  private APIConfigAvatarPerfLimiter avatarPerfLimiter;

  public static final String SERIALIZED_NAME_CHATBOX_LOG_BUFFER_SECONDS = "chatboxLogBufferSeconds";
  @SerializedName(SERIALIZED_NAME_CHATBOX_LOG_BUFFER_SECONDS)
  private Integer chatboxLogBufferSeconds = 40;

  public static final String SERIALIZED_NAME_CLIENT_API_KEY = "clientApiKey";
  @SerializedName(SERIALIZED_NAME_CLIENT_API_KEY)
  private String clientApiKey;

  public static final String SERIALIZED_NAME_CLIENT_B_P_S_CEILING = "clientBPSCeiling";
  @SerializedName(SERIALIZED_NAME_CLIENT_B_P_S_CEILING)
  private Integer clientBPSCeiling = 18432;

  public static final String SERIALIZED_NAME_CLIENT_DISCONNECT_TIMEOUT = "clientDisconnectTimeout";
  @SerializedName(SERIALIZED_NAME_CLIENT_DISCONNECT_TIMEOUT)
  private Integer clientDisconnectTimeout = 30000;

  public static final String SERIALIZED_NAME_CLIENT_NET_DISPATCH_THREAD = "clientNetDispatchThread";
  @SerializedName(SERIALIZED_NAME_CLIENT_NET_DISPATCH_THREAD)
  private Boolean clientNetDispatchThread = false;

  public static final String SERIALIZED_NAME_CLIENT_NET_DISPATCH_THREAD_MOBILE = "clientNetDispatchThreadMobile";
  @SerializedName(SERIALIZED_NAME_CLIENT_NET_DISPATCH_THREAD_MOBILE)
  private Boolean clientNetDispatchThreadMobile = true;

  public static final String SERIALIZED_NAME_CLIENT_NET_IN_THREAD = "clientNetInThread";
  @SerializedName(SERIALIZED_NAME_CLIENT_NET_IN_THREAD)
  private Boolean clientNetInThread = false;

  public static final String SERIALIZED_NAME_CLIENT_NET_IN_THREAD2 = "clientNetInThread2";
  @SerializedName(SERIALIZED_NAME_CLIENT_NET_IN_THREAD2)
  private Boolean clientNetInThread2 = false;

  public static final String SERIALIZED_NAME_CLIENT_NET_IN_THREAD_MOBILE = "clientNetInThreadMobile";
  @SerializedName(SERIALIZED_NAME_CLIENT_NET_IN_THREAD_MOBILE)
  private Boolean clientNetInThreadMobile = false;

  public static final String SERIALIZED_NAME_CLIENT_NET_IN_THREAD_MOBILE2 = "clientNetInThreadMobile2";
  @SerializedName(SERIALIZED_NAME_CLIENT_NET_IN_THREAD_MOBILE2)
  private Boolean clientNetInThreadMobile2 = false;

  public static final String SERIALIZED_NAME_CLIENT_NET_OUT_THREAD = "clientNetOutThread";
  @SerializedName(SERIALIZED_NAME_CLIENT_NET_OUT_THREAD)
  private Boolean clientNetOutThread = false;

  public static final String SERIALIZED_NAME_CLIENT_NET_OUT_THREAD2 = "clientNetOutThread2";
  @SerializedName(SERIALIZED_NAME_CLIENT_NET_OUT_THREAD2)
  private Boolean clientNetOutThread2 = false;

  public static final String SERIALIZED_NAME_CLIENT_NET_OUT_THREAD_MOBILE = "clientNetOutThreadMobile";
  @SerializedName(SERIALIZED_NAME_CLIENT_NET_OUT_THREAD_MOBILE)
  private Boolean clientNetOutThreadMobile = false;

  public static final String SERIALIZED_NAME_CLIENT_NET_OUT_THREAD_MOBILE2 = "clientNetOutThreadMobile2";
  @SerializedName(SERIALIZED_NAME_CLIENT_NET_OUT_THREAD_MOBILE2)
  private Boolean clientNetOutThreadMobile2 = false;

  public static final String SERIALIZED_NAME_CLIENT_Q_R = "clientQR";
  @SerializedName(SERIALIZED_NAME_CLIENT_Q_R)
  private Integer clientQR = 1;

  public static final String SERIALIZED_NAME_CLIENT_RESERVED_PLAYER_B_P_S = "clientReservedPlayerBPS";
  @SerializedName(SERIALIZED_NAME_CLIENT_RESERVED_PLAYER_B_P_S)
  private Integer clientReservedPlayerBPS = 7168;

  public static final String SERIALIZED_NAME_CLIENT_SENT_COUNT_ALLOWANCE = "clientSentCountAllowance";
  @SerializedName(SERIALIZED_NAME_CLIENT_SENT_COUNT_ALLOWANCE)
  private Integer clientSentCountAllowance = 15;

  public static final String SERIALIZED_NAME_CONSTANTS = "constants";
  @SerializedName(SERIALIZED_NAME_CONSTANTS)
  private APIConfigConstants constants;

  public static final String SERIALIZED_NAME_CONTACT_EMAIL = "contactEmail";
  @SerializedName(SERIALIZED_NAME_CONTACT_EMAIL)
  private String contactEmail;

  public static final String SERIALIZED_NAME_COPYRIGHT_EMAIL = "copyrightEmail";
  @SerializedName(SERIALIZED_NAME_COPYRIGHT_EMAIL)
  private String copyrightEmail;

  public static final String SERIALIZED_NAME_CURRENT_PRIVACY_VERSION = "currentPrivacyVersion";
  @SerializedName(SERIALIZED_NAME_CURRENT_PRIVACY_VERSION)
  private Integer currentPrivacyVersion = 1;

  public static final String SERIALIZED_NAME_CURRENT_T_O_S_VERSION = "currentTOSVersion";
  @SerializedName(SERIALIZED_NAME_CURRENT_T_O_S_VERSION)
  private Integer currentTOSVersion;

  public static final String SERIALIZED_NAME_DEFAULT_AVATAR = "defaultAvatar";
  @SerializedName(SERIALIZED_NAME_DEFAULT_AVATAR)
  private String defaultAvatar;

  public static final String SERIALIZED_NAME_DEFAULT_STICKER_SET = "defaultStickerSet";
  @SerializedName(SERIALIZED_NAME_DEFAULT_STICKER_SET)
  private String defaultStickerSet;

  public static final String SERIALIZED_NAME_DEV_LANGUAGE_CODES = "devLanguageCodes";
  @SerializedName(SERIALIZED_NAME_DEV_LANGUAGE_CODES)
  private List<String> devLanguageCodes = null;

  public static final String SERIALIZED_NAME_DEV_SDK_URL = "devSdkUrl";
  @SerializedName(SERIALIZED_NAME_DEV_SDK_URL)
  private String devSdkUrl;

  public static final String SERIALIZED_NAME_DEV_SDK_VERSION = "devSdkVersion";
  @SerializedName(SERIALIZED_NAME_DEV_SDK_VERSION)
  private String devSdkVersion;

  public static final String SERIALIZED_NAME_DIS_COUNTDOWN = "dis-countdown";
  @SerializedName(SERIALIZED_NAME_DIS_COUNTDOWN)
  private OffsetDateTime disCountdown;

  public static final String SERIALIZED_NAME_DISABLE_A_V_PRO_IN_PROTON = "disableAVProInProton";
  @SerializedName(SERIALIZED_NAME_DISABLE_A_V_PRO_IN_PROTON)
  private Boolean disableAVProInProton = false;

  public static final String SERIALIZED_NAME_DISABLE_AVATAR_COPYING = "disableAvatarCopying";
  @SerializedName(SERIALIZED_NAME_DISABLE_AVATAR_COPYING)
  private Boolean disableAvatarCopying = false;

  public static final String SERIALIZED_NAME_DISABLE_AVATAR_GATING = "disableAvatarGating";
  @SerializedName(SERIALIZED_NAME_DISABLE_AVATAR_GATING)
  private Boolean disableAvatarGating = false;

  public static final String SERIALIZED_NAME_DISABLE_COMMUNITY_LABS = "disableCommunityLabs";
  @SerializedName(SERIALIZED_NAME_DISABLE_COMMUNITY_LABS)
  private Boolean disableCommunityLabs = false;

  public static final String SERIALIZED_NAME_DISABLE_COMMUNITY_LABS_PROMOTION = "disableCommunityLabsPromotion";
  @SerializedName(SERIALIZED_NAME_DISABLE_COMMUNITY_LABS_PROMOTION)
  private Boolean disableCommunityLabsPromotion = false;

  public static final String SERIALIZED_NAME_DISABLE_EMAIL = "disableEmail";
  @SerializedName(SERIALIZED_NAME_DISABLE_EMAIL)
  private Boolean disableEmail = false;

  public static final String SERIALIZED_NAME_DISABLE_CAPTCHA = "disableCaptcha";
  @SerializedName(SERIALIZED_NAME_DISABLE_CAPTCHA)
  private Boolean disableCaptcha = true;

  public static final String SERIALIZED_NAME_DISABLE_EVENT_STREAM = "disableEventStream";
  @SerializedName(SERIALIZED_NAME_DISABLE_EVENT_STREAM)
  private Boolean disableEventStream = false;

  public static final String SERIALIZED_NAME_DISABLE_FEEDBACK_GATING = "disableFeedbackGating";
  @SerializedName(SERIALIZED_NAME_DISABLE_FEEDBACK_GATING)
  private Boolean disableFeedbackGating = false;

  public static final String SERIALIZED_NAME_DISABLE_FRONTEND_BUILDS = "disableFrontendBuilds";
  @SerializedName(SERIALIZED_NAME_DISABLE_FRONTEND_BUILDS)
  private Boolean disableFrontendBuilds = false;

  public static final String SERIALIZED_NAME_DISABLE_GIFT_DROPS = "disableGiftDrops";
  @SerializedName(SERIALIZED_NAME_DISABLE_GIFT_DROPS)
  private Boolean disableGiftDrops = false;

  public static final String SERIALIZED_NAME_DISABLE_HELLO = "disableHello";
  @SerializedName(SERIALIZED_NAME_DISABLE_HELLO)
  private Boolean disableHello = false;

  public static final String SERIALIZED_NAME_DISABLE_OCULUS_SUBS = "disableOculusSubs";
  @SerializedName(SERIALIZED_NAME_DISABLE_OCULUS_SUBS)
  private Boolean disableOculusSubs = false;

  public static final String SERIALIZED_NAME_DISABLE_REGISTRATION = "disableRegistration";
  @SerializedName(SERIALIZED_NAME_DISABLE_REGISTRATION)
  private Boolean disableRegistration = false;

  public static final String SERIALIZED_NAME_DISABLE_STEAM_NETWORKING = "disableSteamNetworking";
  @SerializedName(SERIALIZED_NAME_DISABLE_STEAM_NETWORKING)
  private Boolean disableSteamNetworking = true;

  public static final String SERIALIZED_NAME_DISABLE_TWO_FACTOR_AUTH = "disableTwoFactorAuth";
  @SerializedName(SERIALIZED_NAME_DISABLE_TWO_FACTOR_AUTH)
  private Boolean disableTwoFactorAuth = false;

  public static final String SERIALIZED_NAME_DISABLE_UDON = "disableUdon";
  @SerializedName(SERIALIZED_NAME_DISABLE_UDON)
  private Boolean disableUdon = false;

  public static final String SERIALIZED_NAME_DISABLE_UPGRADE_ACCOUNT = "disableUpgradeAccount";
  @SerializedName(SERIALIZED_NAME_DISABLE_UPGRADE_ACCOUNT)
  private Boolean disableUpgradeAccount = false;

  public static final String SERIALIZED_NAME_DOWNLOAD_LINK_WINDOWS = "downloadLinkWindows";
  @SerializedName(SERIALIZED_NAME_DOWNLOAD_LINK_WINDOWS)
  private String downloadLinkWindows;

  public static final String SERIALIZED_NAME_DOWNLOAD_URLS = "downloadUrls";
  @SerializedName(SERIALIZED_NAME_DOWNLOAD_URLS)
  private APIConfigDownloadURLList downloadUrls;

  public static final String SERIALIZED_NAME_DYNAMIC_WORLD_ROWS = "dynamicWorldRows";
  @SerializedName(SERIALIZED_NAME_DYNAMIC_WORLD_ROWS)
  private Set<DynamicContentRow> dynamicWorldRows = new LinkedHashSet<>();

  public static final String SERIALIZED_NAME_ECONOMY_PAUSE_END = "economyPauseEnd";
  @SerializedName(SERIALIZED_NAME_ECONOMY_PAUSE_END)
  private String economyPauseEnd;

  public static final String SERIALIZED_NAME_ECONOMY_PAUSE_START = "economyPauseStart";
  @SerializedName(SERIALIZED_NAME_ECONOMY_PAUSE_START)
  private String economyPauseStart;

  public static final String SERIALIZED_NAME_ECONOMY_STATE = "economyState";
  @SerializedName(SERIALIZED_NAME_ECONOMY_STATE)
  private Integer economyState = 1;

  public static final String SERIALIZED_NAME_EVENTS = "events";
  @SerializedName(SERIALIZED_NAME_EVENTS)
  private APIConfigEvents events;

  public static final String SERIALIZED_NAME_FORCE_USE_LATEST_WORLD = "forceUseLatestWorld";
  @SerializedName(SERIALIZED_NAME_FORCE_USE_LATEST_WORLD)
  private Boolean forceUseLatestWorld = true;

  public static final String SERIALIZED_NAME_GIFT_DISPLAY_TYPE = "giftDisplayType";
  @SerializedName(SERIALIZED_NAME_GIFT_DISPLAY_TYPE)
  private String giftDisplayType;

  public static final String SERIALIZED_NAME_GOOGLE_API_CLIENT_ID = "googleApiClientId";
  @SerializedName(SERIALIZED_NAME_GOOGLE_API_CLIENT_ID)
  private String googleApiClientId = "827942544393-r2ouvckvouldn9dg9uruseje575e878f.apps.googleusercontent.com";

  public static final String SERIALIZED_NAME_HOME_WORLD_ID = "homeWorldId";
  @SerializedName(SERIALIZED_NAME_HOME_WORLD_ID)
  private String homeWorldId;

  public static final String SERIALIZED_NAME_HOMEPAGE_REDIRECT_TARGET = "homepageRedirectTarget";
  @SerializedName(SERIALIZED_NAME_HOMEPAGE_REDIRECT_TARGET)
  private String homepageRedirectTarget = "https://hello.vrchat.com";

  public static final String SERIALIZED_NAME_HUB_WORLD_ID = "hubWorldId";
  @SerializedName(SERIALIZED_NAME_HUB_WORLD_ID)
  private String hubWorldId;

  public static final String SERIALIZED_NAME_IMAGE_HOST_URL_LIST = "imageHostUrlList";
  @SerializedName(SERIALIZED_NAME_IMAGE_HOST_URL_LIST)
  private List<String> imageHostUrlList = new ArrayList<>();

  public static final String SERIALIZED_NAME_JOBS_EMAIL = "jobsEmail";
  @SerializedName(SERIALIZED_NAME_JOBS_EMAIL)
  private String jobsEmail;

  public static final String SERIALIZED_NAME_MIN_SUPPORTED_CLIENT_BUILD_NUMBER = "minSupportedClientBuildNumber";
  @SerializedName(SERIALIZED_NAME_MIN_SUPPORTED_CLIENT_BUILD_NUMBER)
  private APIConfigMinSupportedClientBuildNumber minSupportedClientBuildNumber;

  public static final String SERIALIZED_NAME_MINIMUM_UNITY_VERSION_FOR_UPLOADS = "minimumUnityVersionForUploads";
  @SerializedName(SERIALIZED_NAME_MINIMUM_UNITY_VERSION_FOR_UPLOADS)
  private String minimumUnityVersionForUploads = "2019.0.0f1";

  public static final String SERIALIZED_NAME_MODERATION_EMAIL = "moderationEmail";
  @SerializedName(SERIALIZED_NAME_MODERATION_EMAIL)
  private String moderationEmail;

  public static final String SERIALIZED_NAME_NOT_ALLOWED_TO_SELECT_AVATAR_IN_PRIVATE_WORLD_MESSAGE = "notAllowedToSelectAvatarInPrivateWorldMessage";
  @SerializedName(SERIALIZED_NAME_NOT_ALLOWED_TO_SELECT_AVATAR_IN_PRIVATE_WORLD_MESSAGE)
  private String notAllowedToSelectAvatarInPrivateWorldMessage;

  public static final String SERIALIZED_NAME_OFFLINE_ANALYSIS = "offlineAnalysis";
  @SerializedName(SERIALIZED_NAME_OFFLINE_ANALYSIS)
  private APIConfigOfflineAnalysis offlineAnalysis;

  public static final String SERIALIZED_NAME_PHOTON_NAMESERVER_OVERRIDES = "photonNameserverOverrides";
  @SerializedName(SERIALIZED_NAME_PHOTON_NAMESERVER_OVERRIDES)
  private List<String> photonNameserverOverrides = new ArrayList<>();

  public static final String SERIALIZED_NAME_PHOTON_PUBLIC_KEYS = "photonPublicKeys";
  @SerializedName(SERIALIZED_NAME_PHOTON_PUBLIC_KEYS)
  private List<String> photonPublicKeys = new ArrayList<>();

  public static final String SERIALIZED_NAME_REPORT_CATEGORIES = "reportCategories";
  @SerializedName(SERIALIZED_NAME_REPORT_CATEGORIES)
  private APIConfigReportCategories reportCategories;

  public static final String SERIALIZED_NAME_REPORT_FORM_URL = "reportFormUrl";
  @SerializedName(SERIALIZED_NAME_REPORT_FORM_URL)
  private String reportFormUrl = "https://help.vrchat.com/hc/en-us/requests/new?ticket_form_id=1500000182242&tf_360056455174=user_report&tf_360057451993={userId}&tf_1500001445142={reportedId}&tf_subject={reason} {category} By {contentType} {reportedName}&tf_description={description}";

  public static final String SERIALIZED_NAME_REPORT_OPTIONS = "reportOptions";
  @SerializedName(SERIALIZED_NAME_REPORT_OPTIONS)
  private APIConfigReportOptions reportOptions;

  public static final String SERIALIZED_NAME_REPORT_REASONS = "reportReasons";
  @SerializedName(SERIALIZED_NAME_REPORT_REASONS)
  private APIConfigReportReasons reportReasons;

  public static final String SERIALIZED_NAME_REQUIRE_AGE_VERIFICATION_BETA_TAG = "requireAgeVerificationBetaTag";
  @SerializedName(SERIALIZED_NAME_REQUIRE_AGE_VERIFICATION_BETA_TAG)
  private Boolean requireAgeVerificationBetaTag;

  public static final String SERIALIZED_NAME_SDK_DEVELOPER_FAQ_URL = "sdkDeveloperFaqUrl";
  @SerializedName(SERIALIZED_NAME_SDK_DEVELOPER_FAQ_URL)
  private String sdkDeveloperFaqUrl;

  public static final String SERIALIZED_NAME_SDK_DISCORD_URL = "sdkDiscordUrl";
  @SerializedName(SERIALIZED_NAME_SDK_DISCORD_URL)
  private String sdkDiscordUrl;

  public static final String SERIALIZED_NAME_SDK_NOT_ALLOWED_TO_PUBLISH_MESSAGE = "sdkNotAllowedToPublishMessage";
  @SerializedName(SERIALIZED_NAME_SDK_NOT_ALLOWED_TO_PUBLISH_MESSAGE)
  private String sdkNotAllowedToPublishMessage;

  public static final String SERIALIZED_NAME_SDK_UNITY_VERSION = "sdkUnityVersion";
  @SerializedName(SERIALIZED_NAME_SDK_UNITY_VERSION)
  private String sdkUnityVersion;

  public static final String SERIALIZED_NAME_STRING_HOST_URL_LIST = "stringHostUrlList";
  @SerializedName(SERIALIZED_NAME_STRING_HOST_URL_LIST)
  private List<String> stringHostUrlList = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUPPORT_EMAIL = "supportEmail";
  @SerializedName(SERIALIZED_NAME_SUPPORT_EMAIL)
  private String supportEmail;

  public static final String SERIALIZED_NAME_SUPPORT_FORM_URL = "supportFormUrl";
  @SerializedName(SERIALIZED_NAME_SUPPORT_FORM_URL)
  private String supportFormUrl;

  public static final String SERIALIZED_NAME_TIMEKEEPING = "timekeeping";
  @SerializedName(SERIALIZED_NAME_TIMEKEEPING)
  private Boolean timekeeping = true;

  public static final String SERIALIZED_NAME_TIME_OUT_WORLD_ID = "timeOutWorldId";
  @SerializedName(SERIALIZED_NAME_TIME_OUT_WORLD_ID)
  private String timeOutWorldId;

  public static final String SERIALIZED_NAME_TUTORIAL_WORLD_ID = "tutorialWorldId";
  @SerializedName(SERIALIZED_NAME_TUTORIAL_WORLD_ID)
  private String tutorialWorldId;

  public static final String SERIALIZED_NAME_UPDATE_RATE_MS_MAXIMUM = "updateRateMsMaximum";
  @SerializedName(SERIALIZED_NAME_UPDATE_RATE_MS_MAXIMUM)
  private Integer updateRateMsMaximum;

  public static final String SERIALIZED_NAME_UPDATE_RATE_MS_MINIMUM = "updateRateMsMinimum";
  @SerializedName(SERIALIZED_NAME_UPDATE_RATE_MS_MINIMUM)
  private Integer updateRateMsMinimum;

  public static final String SERIALIZED_NAME_UPDATE_RATE_MS_NORMAL = "updateRateMsNormal";
  @SerializedName(SERIALIZED_NAME_UPDATE_RATE_MS_NORMAL)
  private Integer updateRateMsNormal;

  public static final String SERIALIZED_NAME_UPDATE_RATE_MS_UDON_MANUAL = "updateRateMsUdonManual";
  @SerializedName(SERIALIZED_NAME_UPDATE_RATE_MS_UDON_MANUAL)
  private Integer updateRateMsUdonManual;

  public static final String SERIALIZED_NAME_UPLOAD_ANALYSIS_PERCENT = "uploadAnalysisPercent";
  @SerializedName(SERIALIZED_NAME_UPLOAD_ANALYSIS_PERCENT)
  private Integer uploadAnalysisPercent;

  public static final String SERIALIZED_NAME_URL_LIST = "urlList";
  @SerializedName(SERIALIZED_NAME_URL_LIST)
  private List<String> urlList = new ArrayList<>();

  public static final String SERIALIZED_NAME_USE_RELIABLE_UDP_FOR_VOICE = "useReliableUdpForVoice";
  @SerializedName(SERIALIZED_NAME_USE_RELIABLE_UDP_FOR_VOICE)
  private Boolean useReliableUdpForVoice = false;

  public static final String SERIALIZED_NAME_VIVE_WINDOWS_URL = "viveWindowsUrl";
  @SerializedName(SERIALIZED_NAME_VIVE_WINDOWS_URL)
  private String viveWindowsUrl;

  public static final String SERIALIZED_NAME_WHITE_LISTED_ASSET_URLS = "whiteListedAssetUrls";
  @SerializedName(SERIALIZED_NAME_WHITE_LISTED_ASSET_URLS)
  private List<String> whiteListedAssetUrls = new ArrayList<>();

  public static final String SERIALIZED_NAME_PLAYER_URL_RESOLVER_VERSION = "player-url-resolver-version";
  @SerializedName(SERIALIZED_NAME_PLAYER_URL_RESOLVER_VERSION)
  private String playerUrlResolverVersion;

  public static final String SERIALIZED_NAME_PLAYER_URL_RESOLVER_SHA1 = "player-url-resolver-sha1";
  @SerializedName(SERIALIZED_NAME_PLAYER_URL_RESOLVER_SHA1)
  private String playerUrlResolverSha1;

  public static final String SERIALIZED_NAME_PUBLIC_KEY = "publicKey";
  @SerializedName(SERIALIZED_NAME_PUBLIC_KEY)
  private String publicKey;

  public static final String SERIALIZED_NAME_WEBSOCKET_MAX_FRIENDS_REFRESH_DELAY = "websocketMaxFriendsRefreshDelay";
  @SerializedName(SERIALIZED_NAME_WEBSOCKET_MAX_FRIENDS_REFRESH_DELAY)
  private Integer websocketMaxFriendsRefreshDelay = 900;

  public static final String SERIALIZED_NAME_WEBSOCKET_QUICK_RECONNECT_TIME = "websocketQuickReconnectTime";
  @SerializedName(SERIALIZED_NAME_WEBSOCKET_QUICK_RECONNECT_TIME)
  private Integer websocketQuickReconnectTime = 2;

  public static final String SERIALIZED_NAME_WEBSOCKET_RECONNECT_MAX_DELAY = "websocketReconnectMaxDelay";
  @SerializedName(SERIALIZED_NAME_WEBSOCKET_RECONNECT_MAX_DELAY)
  private Integer websocketReconnectMaxDelay = 2;

  public APIConfig() {
  }

  public APIConfig voiceEnableDegradation(Boolean voiceEnableDegradation) {
    
    this.voiceEnableDegradation = voiceEnableDegradation;
    return this;
  }

   /**
   * Unknown, probably voice optimization testing
   * @return voiceEnableDegradation
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown, probably voice optimization testing")

  public Boolean getVoiceEnableDegradation() {
    return voiceEnableDegradation;
  }


  public void setVoiceEnableDegradation(Boolean voiceEnableDegradation) {
    this.voiceEnableDegradation = voiceEnableDegradation;
  }


  public APIConfig voiceEnableReceiverLimiting(Boolean voiceEnableReceiverLimiting) {
    
    this.voiceEnableReceiverLimiting = voiceEnableReceiverLimiting;
    return this;
  }

   /**
   * Unknown, probably voice optimization testing
   * @return voiceEnableReceiverLimiting
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown, probably voice optimization testing")

  public Boolean getVoiceEnableReceiverLimiting() {
    return voiceEnableReceiverLimiting;
  }


  public void setVoiceEnableReceiverLimiting(Boolean voiceEnableReceiverLimiting) {
    this.voiceEnableReceiverLimiting = voiceEnableReceiverLimiting;
  }


  public APIConfig accessLogsUrls(APIConfigAccessLogsUrls accessLogsUrls) {
    
    this.accessLogsUrls = accessLogsUrls;
    return this;
  }

   /**
   * Get accessLogsUrls
   * @return accessLogsUrls
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public APIConfigAccessLogsUrls getAccessLogsUrls() {
    return accessLogsUrls;
  }


  public void setAccessLogsUrls(APIConfigAccessLogsUrls accessLogsUrls) {
    this.accessLogsUrls = accessLogsUrls;
  }


  public APIConfig address(String address) {
    
    this.address = address;
    return this;
  }

   /**
   * VRChat&#39;s office address
   * @return address
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "VRChat's office address")

  public String getAddress() {
    return address;
  }


  public void setAddress(String address) {
    this.address = address;
  }


  public APIConfig ageVerificationInviteVisible(Boolean ageVerificationInviteVisible) {
    
    this.ageVerificationInviteVisible = ageVerificationInviteVisible;
    return this;
  }

   /**
   * Get ageVerificationInviteVisible
   * @return ageVerificationInviteVisible
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getAgeVerificationInviteVisible() {
    return ageVerificationInviteVisible;
  }


  public void setAgeVerificationInviteVisible(Boolean ageVerificationInviteVisible) {
    this.ageVerificationInviteVisible = ageVerificationInviteVisible;
  }


  public APIConfig ageVerificationP(Boolean ageVerificationP) {
    
    this.ageVerificationP = ageVerificationP;
    return this;
  }

   /**
   * Get ageVerificationP
   * @return ageVerificationP
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getAgeVerificationP() {
    return ageVerificationP;
  }


  public void setAgeVerificationP(Boolean ageVerificationP) {
    this.ageVerificationP = ageVerificationP;
  }


  public APIConfig ageVerificationStatusVisible(Boolean ageVerificationStatusVisible) {
    
    this.ageVerificationStatusVisible = ageVerificationStatusVisible;
    return this;
  }

   /**
   * Get ageVerificationStatusVisible
   * @return ageVerificationStatusVisible
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getAgeVerificationStatusVisible() {
    return ageVerificationStatusVisible;
  }


  public void setAgeVerificationStatusVisible(Boolean ageVerificationStatusVisible) {
    this.ageVerificationStatusVisible = ageVerificationStatusVisible;
  }


  public APIConfig analysisMaxRetries(Integer analysisMaxRetries) {
    
    this.analysisMaxRetries = analysisMaxRetries;
    return this;
  }

   /**
   * Max retries for avatar analysis requests
   * @return analysisMaxRetries
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Max retries for avatar analysis requests")

  public Integer getAnalysisMaxRetries() {
    return analysisMaxRetries;
  }


  public void setAnalysisMaxRetries(Integer analysisMaxRetries) {
    this.analysisMaxRetries = analysisMaxRetries;
  }


  public APIConfig analysisRetryInterval(Integer analysisRetryInterval) {
    
    this.analysisRetryInterval = analysisRetryInterval;
    return this;
  }

   /**
   * Interval between retries for avatar analysis requests
   * @return analysisRetryInterval
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Interval between retries for avatar analysis requests")

  public Integer getAnalysisRetryInterval() {
    return analysisRetryInterval;
  }


  public void setAnalysisRetryInterval(Integer analysisRetryInterval) {
    this.analysisRetryInterval = analysisRetryInterval;
  }


  public APIConfig announcements(Set<APIConfigAnnouncement> announcements) {
    
    this.announcements = announcements;
    return this;
  }

  public APIConfig addAnnouncementsItem(APIConfigAnnouncement announcementsItem) {
    this.announcements.add(announcementsItem);
    return this;
  }

   /**
   * Public Announcements
   * @return announcements
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Public Announcements")

  public Set<APIConfigAnnouncement> getAnnouncements() {
    return announcements;
  }


  public void setAnnouncements(Set<APIConfigAnnouncement> announcements) {
    this.announcements = announcements;
  }


  public APIConfig analyticsSegmentNewUIPctOfUsers(Integer analyticsSegmentNewUIPctOfUsers) {
    
    this.analyticsSegmentNewUIPctOfUsers = analyticsSegmentNewUIPctOfUsers;
    return this;
  }

   /**
   * Unknown
   * @return analyticsSegmentNewUIPctOfUsers
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getAnalyticsSegmentNewUIPctOfUsers() {
    return analyticsSegmentNewUIPctOfUsers;
  }


  public void setAnalyticsSegmentNewUIPctOfUsers(Integer analyticsSegmentNewUIPctOfUsers) {
    this.analyticsSegmentNewUIPctOfUsers = analyticsSegmentNewUIPctOfUsers;
  }


  public APIConfig analyticsSegmentNewUISalt(String analyticsSegmentNewUISalt) {
    
    this.analyticsSegmentNewUISalt = analyticsSegmentNewUISalt;
    return this;
  }

   /**
   * Unknown
   * @return analyticsSegmentNewUISalt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public String getAnalyticsSegmentNewUISalt() {
    return analyticsSegmentNewUISalt;
  }


  public void setAnalyticsSegmentNewUISalt(String analyticsSegmentNewUISalt) {
    this.analyticsSegmentNewUISalt = analyticsSegmentNewUISalt;
  }


  public APIConfig availableLanguageCodes(List<String> availableLanguageCodes) {
    
    this.availableLanguageCodes = availableLanguageCodes;
    return this;
  }

  public APIConfig addAvailableLanguageCodesItem(String availableLanguageCodesItem) {
    this.availableLanguageCodes.add(availableLanguageCodesItem);
    return this;
  }

   /**
   * List of supported Languages
   * @return availableLanguageCodes
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "List of supported Languages")

  public List<String> getAvailableLanguageCodes() {
    return availableLanguageCodes;
  }


  public void setAvailableLanguageCodes(List<String> availableLanguageCodes) {
    this.availableLanguageCodes = availableLanguageCodes;
  }


  public APIConfig availableLanguages(List<String> availableLanguages) {
    
    this.availableLanguages = availableLanguages;
    return this;
  }

  public APIConfig addAvailableLanguagesItem(String availableLanguagesItem) {
    this.availableLanguages.add(availableLanguagesItem);
    return this;
  }

   /**
   * List of supported Languages
   * @return availableLanguages
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "List of supported Languages")

  public List<String> getAvailableLanguages() {
    return availableLanguages;
  }


  public void setAvailableLanguages(List<String> availableLanguages) {
    this.availableLanguages = availableLanguages;
  }


  public APIConfig avatarPerfLimiter(APIConfigAvatarPerfLimiter avatarPerfLimiter) {
    
    this.avatarPerfLimiter = avatarPerfLimiter;
    return this;
  }

   /**
   * Get avatarPerfLimiter
   * @return avatarPerfLimiter
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public APIConfigAvatarPerfLimiter getAvatarPerfLimiter() {
    return avatarPerfLimiter;
  }


  public void setAvatarPerfLimiter(APIConfigAvatarPerfLimiter avatarPerfLimiter) {
    this.avatarPerfLimiter = avatarPerfLimiter;
  }


  public APIConfig chatboxLogBufferSeconds(Integer chatboxLogBufferSeconds) {
    
    this.chatboxLogBufferSeconds = chatboxLogBufferSeconds;
    return this;
  }

   /**
   * Unknown
   * @return chatboxLogBufferSeconds
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getChatboxLogBufferSeconds() {
    return chatboxLogBufferSeconds;
  }


  public void setChatboxLogBufferSeconds(Integer chatboxLogBufferSeconds) {
    this.chatboxLogBufferSeconds = chatboxLogBufferSeconds;
  }


  public APIConfig clientApiKey(String clientApiKey) {
    
    this.clientApiKey = clientApiKey;
    return this;
  }

   /**
   * apiKey to be used for all other requests
   * @return clientApiKey
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "apiKey to be used for all other requests")

  public String getClientApiKey() {
    return clientApiKey;
  }


  public void setClientApiKey(String clientApiKey) {
    this.clientApiKey = clientApiKey;
  }


  public APIConfig clientBPSCeiling(Integer clientBPSCeiling) {
    
    this.clientBPSCeiling = clientBPSCeiling;
    return this;
  }

   /**
   * Unknown
   * @return clientBPSCeiling
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getClientBPSCeiling() {
    return clientBPSCeiling;
  }


  public void setClientBPSCeiling(Integer clientBPSCeiling) {
    this.clientBPSCeiling = clientBPSCeiling;
  }


  public APIConfig clientDisconnectTimeout(Integer clientDisconnectTimeout) {
    
    this.clientDisconnectTimeout = clientDisconnectTimeout;
    return this;
  }

   /**
   * Unknown
   * @return clientDisconnectTimeout
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getClientDisconnectTimeout() {
    return clientDisconnectTimeout;
  }


  public void setClientDisconnectTimeout(Integer clientDisconnectTimeout) {
    this.clientDisconnectTimeout = clientDisconnectTimeout;
  }


  public APIConfig clientNetDispatchThread(Boolean clientNetDispatchThread) {
    
    this.clientNetDispatchThread = clientNetDispatchThread;
    return this;
  }

   /**
   * Unknown
   * @return clientNetDispatchThread
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unknown")

  public Boolean getClientNetDispatchThread() {
    return clientNetDispatchThread;
  }


  public void setClientNetDispatchThread(Boolean clientNetDispatchThread) {
    this.clientNetDispatchThread = clientNetDispatchThread;
  }


  public APIConfig clientNetDispatchThreadMobile(Boolean clientNetDispatchThreadMobile) {
    
    this.clientNetDispatchThreadMobile = clientNetDispatchThreadMobile;
    return this;
  }

   /**
   * Unknown
   * @return clientNetDispatchThreadMobile
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Boolean getClientNetDispatchThreadMobile() {
    return clientNetDispatchThreadMobile;
  }


  public void setClientNetDispatchThreadMobile(Boolean clientNetDispatchThreadMobile) {
    this.clientNetDispatchThreadMobile = clientNetDispatchThreadMobile;
  }


  public APIConfig clientNetInThread(Boolean clientNetInThread) {
    
    this.clientNetInThread = clientNetInThread;
    return this;
  }

   /**
   * Unknown
   * @return clientNetInThread
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unknown")

  public Boolean getClientNetInThread() {
    return clientNetInThread;
  }


  public void setClientNetInThread(Boolean clientNetInThread) {
    this.clientNetInThread = clientNetInThread;
  }


  public APIConfig clientNetInThread2(Boolean clientNetInThread2) {
    
    this.clientNetInThread2 = clientNetInThread2;
    return this;
  }

   /**
   * Unknown
   * @return clientNetInThread2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unknown")

  public Boolean getClientNetInThread2() {
    return clientNetInThread2;
  }


  public void setClientNetInThread2(Boolean clientNetInThread2) {
    this.clientNetInThread2 = clientNetInThread2;
  }


  public APIConfig clientNetInThreadMobile(Boolean clientNetInThreadMobile) {
    
    this.clientNetInThreadMobile = clientNetInThreadMobile;
    return this;
  }

   /**
   * Unknown
   * @return clientNetInThreadMobile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unknown")

  public Boolean getClientNetInThreadMobile() {
    return clientNetInThreadMobile;
  }


  public void setClientNetInThreadMobile(Boolean clientNetInThreadMobile) {
    this.clientNetInThreadMobile = clientNetInThreadMobile;
  }


  public APIConfig clientNetInThreadMobile2(Boolean clientNetInThreadMobile2) {
    
    this.clientNetInThreadMobile2 = clientNetInThreadMobile2;
    return this;
  }

   /**
   * Unknown
   * @return clientNetInThreadMobile2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unknown")

  public Boolean getClientNetInThreadMobile2() {
    return clientNetInThreadMobile2;
  }


  public void setClientNetInThreadMobile2(Boolean clientNetInThreadMobile2) {
    this.clientNetInThreadMobile2 = clientNetInThreadMobile2;
  }


  public APIConfig clientNetOutThread(Boolean clientNetOutThread) {
    
    this.clientNetOutThread = clientNetOutThread;
    return this;
  }

   /**
   * Unknown
   * @return clientNetOutThread
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unknown")

  public Boolean getClientNetOutThread() {
    return clientNetOutThread;
  }


  public void setClientNetOutThread(Boolean clientNetOutThread) {
    this.clientNetOutThread = clientNetOutThread;
  }


  public APIConfig clientNetOutThread2(Boolean clientNetOutThread2) {
    
    this.clientNetOutThread2 = clientNetOutThread2;
    return this;
  }

   /**
   * Unknown
   * @return clientNetOutThread2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unknown")

  public Boolean getClientNetOutThread2() {
    return clientNetOutThread2;
  }


  public void setClientNetOutThread2(Boolean clientNetOutThread2) {
    this.clientNetOutThread2 = clientNetOutThread2;
  }


  public APIConfig clientNetOutThreadMobile(Boolean clientNetOutThreadMobile) {
    
    this.clientNetOutThreadMobile = clientNetOutThreadMobile;
    return this;
  }

   /**
   * Unknown
   * @return clientNetOutThreadMobile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unknown")

  public Boolean getClientNetOutThreadMobile() {
    return clientNetOutThreadMobile;
  }


  public void setClientNetOutThreadMobile(Boolean clientNetOutThreadMobile) {
    this.clientNetOutThreadMobile = clientNetOutThreadMobile;
  }


  public APIConfig clientNetOutThreadMobile2(Boolean clientNetOutThreadMobile2) {
    
    this.clientNetOutThreadMobile2 = clientNetOutThreadMobile2;
    return this;
  }

   /**
   * Unknown
   * @return clientNetOutThreadMobile2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unknown")

  public Boolean getClientNetOutThreadMobile2() {
    return clientNetOutThreadMobile2;
  }


  public void setClientNetOutThreadMobile2(Boolean clientNetOutThreadMobile2) {
    this.clientNetOutThreadMobile2 = clientNetOutThreadMobile2;
  }


  public APIConfig clientQR(Integer clientQR) {
    
    this.clientQR = clientQR;
    return this;
  }

   /**
   * Unknown
   * @return clientQR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unknown")

  public Integer getClientQR() {
    return clientQR;
  }


  public void setClientQR(Integer clientQR) {
    this.clientQR = clientQR;
  }


  public APIConfig clientReservedPlayerBPS(Integer clientReservedPlayerBPS) {
    
    this.clientReservedPlayerBPS = clientReservedPlayerBPS;
    return this;
  }

   /**
   * Unknown
   * @return clientReservedPlayerBPS
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getClientReservedPlayerBPS() {
    return clientReservedPlayerBPS;
  }


  public void setClientReservedPlayerBPS(Integer clientReservedPlayerBPS) {
    this.clientReservedPlayerBPS = clientReservedPlayerBPS;
  }


  public APIConfig clientSentCountAllowance(Integer clientSentCountAllowance) {
    
    this.clientSentCountAllowance = clientSentCountAllowance;
    return this;
  }

   /**
   * Unknown
   * @return clientSentCountAllowance
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getClientSentCountAllowance() {
    return clientSentCountAllowance;
  }


  public void setClientSentCountAllowance(Integer clientSentCountAllowance) {
    this.clientSentCountAllowance = clientSentCountAllowance;
  }


  public APIConfig constants(APIConfigConstants constants) {
    
    this.constants = constants;
    return this;
  }

   /**
   * Get constants
   * @return constants
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public APIConfigConstants getConstants() {
    return constants;
  }


  public void setConstants(APIConfigConstants constants) {
    this.constants = constants;
  }


  public APIConfig contactEmail(String contactEmail) {
    
    this.contactEmail = contactEmail;
    return this;
  }

   /**
   * VRChat&#39;s contact email
   * @return contactEmail
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "VRChat's contact email")

  public String getContactEmail() {
    return contactEmail;
  }


  public void setContactEmail(String contactEmail) {
    this.contactEmail = contactEmail;
  }


  public APIConfig copyrightEmail(String copyrightEmail) {
    
    this.copyrightEmail = copyrightEmail;
    return this;
  }

   /**
   * VRChat&#39;s copyright-issues-related email
   * @return copyrightEmail
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "VRChat's copyright-issues-related email")

  public String getCopyrightEmail() {
    return copyrightEmail;
  }


  public void setCopyrightEmail(String copyrightEmail) {
    this.copyrightEmail = copyrightEmail;
  }


  public APIConfig currentPrivacyVersion(Integer currentPrivacyVersion) {
    
    this.currentPrivacyVersion = currentPrivacyVersion;
    return this;
  }

   /**
   * Current version number of the Privacy Agreement
   * @return currentPrivacyVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Current version number of the Privacy Agreement")

  public Integer getCurrentPrivacyVersion() {
    return currentPrivacyVersion;
  }


  public void setCurrentPrivacyVersion(Integer currentPrivacyVersion) {
    this.currentPrivacyVersion = currentPrivacyVersion;
  }


  public APIConfig currentTOSVersion(Integer currentTOSVersion) {
    
    this.currentTOSVersion = currentTOSVersion;
    return this;
  }

   /**
   * Current version number of the Terms of Service
   * minimum: 0
   * @return currentTOSVersion
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "7", required = true, value = "Current version number of the Terms of Service")

  public Integer getCurrentTOSVersion() {
    return currentTOSVersion;
  }


  public void setCurrentTOSVersion(Integer currentTOSVersion) {
    this.currentTOSVersion = currentTOSVersion;
  }


  public APIConfig defaultAvatar(String defaultAvatar) {
    
    this.defaultAvatar = defaultAvatar;
    return this;
  }

   /**
   * Get defaultAvatar
   * @return defaultAvatar
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "avtr_912d66a4-4714-43b8-8407-7de2cafbf55b", required = true, value = "")

  public String getDefaultAvatar() {
    return defaultAvatar;
  }


  public void setDefaultAvatar(String defaultAvatar) {
    this.defaultAvatar = defaultAvatar;
  }


  public APIConfig defaultStickerSet(String defaultStickerSet) {
    
    this.defaultStickerSet = defaultStickerSet;
    return this;
  }

   /**
   * Get defaultStickerSet
   * @return defaultStickerSet
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getDefaultStickerSet() {
    return defaultStickerSet;
  }


  public void setDefaultStickerSet(String defaultStickerSet) {
    this.defaultStickerSet = defaultStickerSet;
  }


  public APIConfig devLanguageCodes(List<String> devLanguageCodes) {
    
    this.devLanguageCodes = devLanguageCodes;
    return this;
  }

  public APIConfig addDevLanguageCodesItem(String devLanguageCodesItem) {
    if (this.devLanguageCodes == null) {
      this.devLanguageCodes = new ArrayList<>();
    }
    this.devLanguageCodes.add(devLanguageCodesItem);
    return this;
  }

   /**
   * Unknown
   * @return devLanguageCodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unknown")

  public List<String> getDevLanguageCodes() {
    return devLanguageCodes;
  }


  public void setDevLanguageCodes(List<String> devLanguageCodes) {
    this.devLanguageCodes = devLanguageCodes;
  }


  public APIConfig devSdkUrl(String devSdkUrl) {
    
    this.devSdkUrl = devSdkUrl;
    return this;
  }

   /**
   * Link to download the development SDK, use downloadUrls instead
   * @return devSdkUrl
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Link to download the development SDK, use downloadUrls instead")

  public String getDevSdkUrl() {
    return devSdkUrl;
  }


  public void setDevSdkUrl(String devSdkUrl) {
    this.devSdkUrl = devSdkUrl;
  }


  public APIConfig devSdkVersion(String devSdkVersion) {
    
    this.devSdkVersion = devSdkVersion;
    return this;
  }

   /**
   * Version of the development SDK
   * @return devSdkVersion
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Version of the development SDK")

  public String getDevSdkVersion() {
    return devSdkVersion;
  }


  public void setDevSdkVersion(String devSdkVersion) {
    this.devSdkVersion = devSdkVersion;
  }


  public APIConfig disCountdown(OffsetDateTime disCountdown) {
    
    this.disCountdown = disCountdown;
    return this;
  }

   /**
   * Unknown, \&quot;dis\&quot; maybe for disconnect?
   * @return disCountdown
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown, \"dis\" maybe for disconnect?")

  public OffsetDateTime getDisCountdown() {
    return disCountdown;
  }


  public void setDisCountdown(OffsetDateTime disCountdown) {
    this.disCountdown = disCountdown;
  }


  public APIConfig disableAVProInProton(Boolean disableAVProInProton) {
    
    this.disableAVProInProton = disableAVProInProton;
    return this;
  }

   /**
   * Unknown
   * @return disableAVProInProton
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unknown")

  public Boolean getDisableAVProInProton() {
    return disableAVProInProton;
  }


  public void setDisableAVProInProton(Boolean disableAVProInProton) {
    this.disableAVProInProton = disableAVProInProton;
  }


  public APIConfig disableAvatarCopying(Boolean disableAvatarCopying) {
    
    this.disableAvatarCopying = disableAvatarCopying;
    return this;
  }

   /**
   * Toggles if copying avatars should be disabled
   * @return disableAvatarCopying
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Toggles if copying avatars should be disabled")

  public Boolean getDisableAvatarCopying() {
    return disableAvatarCopying;
  }


  public void setDisableAvatarCopying(Boolean disableAvatarCopying) {
    this.disableAvatarCopying = disableAvatarCopying;
  }


  public APIConfig disableAvatarGating(Boolean disableAvatarGating) {
    
    this.disableAvatarGating = disableAvatarGating;
    return this;
  }

   /**
   * Toggles if avatar gating should be disabled. Avatar gating restricts uploading of avatars to people with the &#x60;system_avatar_access&#x60; Tag or &#x60;admin_avatar_access&#x60; Tag
   * @return disableAvatarGating
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Toggles if avatar gating should be disabled. Avatar gating restricts uploading of avatars to people with the `system_avatar_access` Tag or `admin_avatar_access` Tag")

  public Boolean getDisableAvatarGating() {
    return disableAvatarGating;
  }


  public void setDisableAvatarGating(Boolean disableAvatarGating) {
    this.disableAvatarGating = disableAvatarGating;
  }


  public APIConfig disableCommunityLabs(Boolean disableCommunityLabs) {
    
    this.disableCommunityLabs = disableCommunityLabs;
    return this;
  }

   /**
   * Toggles if the Community Labs should be disabled
   * @return disableCommunityLabs
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Toggles if the Community Labs should be disabled")

  public Boolean getDisableCommunityLabs() {
    return disableCommunityLabs;
  }


  public void setDisableCommunityLabs(Boolean disableCommunityLabs) {
    this.disableCommunityLabs = disableCommunityLabs;
  }


  public APIConfig disableCommunityLabsPromotion(Boolean disableCommunityLabsPromotion) {
    
    this.disableCommunityLabsPromotion = disableCommunityLabsPromotion;
    return this;
  }

   /**
   * Toggles if promotion out of Community Labs should be disabled
   * @return disableCommunityLabsPromotion
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Toggles if promotion out of Community Labs should be disabled")

  public Boolean getDisableCommunityLabsPromotion() {
    return disableCommunityLabsPromotion;
  }


  public void setDisableCommunityLabsPromotion(Boolean disableCommunityLabsPromotion) {
    this.disableCommunityLabsPromotion = disableCommunityLabsPromotion;
  }


  public APIConfig disableEmail(Boolean disableEmail) {
    
    this.disableEmail = disableEmail;
    return this;
  }

   /**
   * Unknown
   * @return disableEmail
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Boolean getDisableEmail() {
    return disableEmail;
  }


  public void setDisableEmail(Boolean disableEmail) {
    this.disableEmail = disableEmail;
  }


  public APIConfig disableCaptcha(Boolean disableCaptcha) {
    
    this.disableCaptcha = disableCaptcha;
    return this;
  }

   /**
   * Unknown
   * @return disableCaptcha
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unknown")

  public Boolean getDisableCaptcha() {
    return disableCaptcha;
  }


  public void setDisableCaptcha(Boolean disableCaptcha) {
    this.disableCaptcha = disableCaptcha;
  }


  public APIConfig disableEventStream(Boolean disableEventStream) {
    
    this.disableEventStream = disableEventStream;
    return this;
  }

   /**
   * Toggles if Analytics should be disabled.
   * @return disableEventStream
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Toggles if Analytics should be disabled.")

  public Boolean getDisableEventStream() {
    return disableEventStream;
  }


  public void setDisableEventStream(Boolean disableEventStream) {
    this.disableEventStream = disableEventStream;
  }


  public APIConfig disableFeedbackGating(Boolean disableFeedbackGating) {
    
    this.disableFeedbackGating = disableFeedbackGating;
    return this;
  }

   /**
   * Toggles if feedback gating should be disabled. Feedback gating restricts submission of feedback (reporting a World or User) to people with the &#x60;system_feedback_access&#x60; Tag.
   * @return disableFeedbackGating
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Toggles if feedback gating should be disabled. Feedback gating restricts submission of feedback (reporting a World or User) to people with the `system_feedback_access` Tag.")

  public Boolean getDisableFeedbackGating() {
    return disableFeedbackGating;
  }


  public void setDisableFeedbackGating(Boolean disableFeedbackGating) {
    this.disableFeedbackGating = disableFeedbackGating;
  }


  public APIConfig disableFrontendBuilds(Boolean disableFrontendBuilds) {
    
    this.disableFrontendBuilds = disableFrontendBuilds;
    return this;
  }

   /**
   * Unknown, probably toggles compilation of frontend web builds? So internal flag?
   * @return disableFrontendBuilds
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown, probably toggles compilation of frontend web builds? So internal flag?")

  public Boolean getDisableFrontendBuilds() {
    return disableFrontendBuilds;
  }


  public void setDisableFrontendBuilds(Boolean disableFrontendBuilds) {
    this.disableFrontendBuilds = disableFrontendBuilds;
  }


  public APIConfig disableGiftDrops(Boolean disableGiftDrops) {
    
    this.disableGiftDrops = disableGiftDrops;
    return this;
  }

   /**
   * Toggles if gift drops should be disabled
   * @return disableGiftDrops
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Toggles if gift drops should be disabled")

  public Boolean getDisableGiftDrops() {
    return disableGiftDrops;
  }


  public void setDisableGiftDrops(Boolean disableGiftDrops) {
    this.disableGiftDrops = disableGiftDrops;
  }


  public APIConfig disableHello(Boolean disableHello) {
    
    this.disableHello = disableHello;
    return this;
  }

   /**
   * Unknown
   * @return disableHello
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Boolean getDisableHello() {
    return disableHello;
  }


  public void setDisableHello(Boolean disableHello) {
    this.disableHello = disableHello;
  }


  public APIConfig disableOculusSubs(Boolean disableOculusSubs) {
    
    this.disableOculusSubs = disableOculusSubs;
    return this;
  }

   /**
   * Toggles if signing up for Subscriptions in Oculus is disabled or not.
   * @return disableOculusSubs
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Toggles if signing up for Subscriptions in Oculus is disabled or not.")

  public Boolean getDisableOculusSubs() {
    return disableOculusSubs;
  }


  public void setDisableOculusSubs(Boolean disableOculusSubs) {
    this.disableOculusSubs = disableOculusSubs;
  }


  public APIConfig disableRegistration(Boolean disableRegistration) {
    
    this.disableRegistration = disableRegistration;
    return this;
  }

   /**
   * Toggles if new user account registration should be disabled.
   * @return disableRegistration
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Toggles if new user account registration should be disabled.")

  public Boolean getDisableRegistration() {
    return disableRegistration;
  }


  public void setDisableRegistration(Boolean disableRegistration) {
    this.disableRegistration = disableRegistration;
  }


  public APIConfig disableSteamNetworking(Boolean disableSteamNetworking) {
    
    this.disableSteamNetworking = disableSteamNetworking;
    return this;
  }

   /**
   * Toggles if Steam Networking should be disabled. VRChat these days uses Photon Unity Networking (PUN) instead.
   * @return disableSteamNetworking
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Toggles if Steam Networking should be disabled. VRChat these days uses Photon Unity Networking (PUN) instead.")

  public Boolean getDisableSteamNetworking() {
    return disableSteamNetworking;
  }


  public void setDisableSteamNetworking(Boolean disableSteamNetworking) {
    this.disableSteamNetworking = disableSteamNetworking;
  }


  public APIConfig disableTwoFactorAuth(Boolean disableTwoFactorAuth) {
    
    this.disableTwoFactorAuth = disableTwoFactorAuth;
    return this;
  }

   /**
   * Toggles if 2FA should be disabled.
   * @return disableTwoFactorAuth
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Toggles if 2FA should be disabled.")

  public Boolean getDisableTwoFactorAuth() {
    return disableTwoFactorAuth;
  }


  public void setDisableTwoFactorAuth(Boolean disableTwoFactorAuth) {
    this.disableTwoFactorAuth = disableTwoFactorAuth;
  }


  public APIConfig disableUdon(Boolean disableUdon) {
    
    this.disableUdon = disableUdon;
    return this;
  }

   /**
   * Toggles if Udon should be universally disabled in-game.
   * @return disableUdon
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Toggles if Udon should be universally disabled in-game.")

  public Boolean getDisableUdon() {
    return disableUdon;
  }


  public void setDisableUdon(Boolean disableUdon) {
    this.disableUdon = disableUdon;
  }


  public APIConfig disableUpgradeAccount(Boolean disableUpgradeAccount) {
    
    this.disableUpgradeAccount = disableUpgradeAccount;
    return this;
  }

   /**
   * Toggles if account upgrading \&quot;linking with Steam/Oculus\&quot; should be disabled.
   * @return disableUpgradeAccount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Toggles if account upgrading \"linking with Steam/Oculus\" should be disabled.")

  public Boolean getDisableUpgradeAccount() {
    return disableUpgradeAccount;
  }


  public void setDisableUpgradeAccount(Boolean disableUpgradeAccount) {
    this.disableUpgradeAccount = disableUpgradeAccount;
  }


  public APIConfig downloadLinkWindows(String downloadLinkWindows) {
    
    this.downloadLinkWindows = downloadLinkWindows;
    return this;
  }

   /**
   * Download link for game on the Oculus Rift website.
   * @return downloadLinkWindows
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Download link for game on the Oculus Rift website.")

  public String getDownloadLinkWindows() {
    return downloadLinkWindows;
  }


  public void setDownloadLinkWindows(String downloadLinkWindows) {
    this.downloadLinkWindows = downloadLinkWindows;
  }


  public APIConfig downloadUrls(APIConfigDownloadURLList downloadUrls) {
    
    this.downloadUrls = downloadUrls;
    return this;
  }

   /**
   * Get downloadUrls
   * @return downloadUrls
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public APIConfigDownloadURLList getDownloadUrls() {
    return downloadUrls;
  }


  public void setDownloadUrls(APIConfigDownloadURLList downloadUrls) {
    this.downloadUrls = downloadUrls;
  }


  public APIConfig dynamicWorldRows(Set<DynamicContentRow> dynamicWorldRows) {
    
    this.dynamicWorldRows = dynamicWorldRows;
    return this;
  }

  public APIConfig addDynamicWorldRowsItem(DynamicContentRow dynamicWorldRowsItem) {
    this.dynamicWorldRows.add(dynamicWorldRowsItem);
    return this;
  }

   /**
   * Array of DynamicWorldRow objects, used by the game to display the list of world rows
   * @return dynamicWorldRows
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Array of DynamicWorldRow objects, used by the game to display the list of world rows")

  public Set<DynamicContentRow> getDynamicWorldRows() {
    return dynamicWorldRows;
  }


  public void setDynamicWorldRows(Set<DynamicContentRow> dynamicWorldRows) {
    this.dynamicWorldRows = dynamicWorldRows;
  }


  public APIConfig economyPauseEnd(String economyPauseEnd) {
    
    this.economyPauseEnd = economyPauseEnd;
    return this;
  }

   /**
   * Unknown
   * @return economyPauseEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unknown")

  public String getEconomyPauseEnd() {
    return economyPauseEnd;
  }


  public void setEconomyPauseEnd(String economyPauseEnd) {
    this.economyPauseEnd = economyPauseEnd;
  }


  public APIConfig economyPauseStart(String economyPauseStart) {
    
    this.economyPauseStart = economyPauseStart;
    return this;
  }

   /**
   * Unknown
   * @return economyPauseStart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unknown")

  public String getEconomyPauseStart() {
    return economyPauseStart;
  }


  public void setEconomyPauseStart(String economyPauseStart) {
    this.economyPauseStart = economyPauseStart;
  }


  public APIConfig economyState(Integer economyState) {
    
    this.economyState = economyState;
    return this;
  }

   /**
   * Unknown
   * @return economyState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unknown")

  public Integer getEconomyState() {
    return economyState;
  }


  public void setEconomyState(Integer economyState) {
    this.economyState = economyState;
  }


  public APIConfig events(APIConfigEvents events) {
    
    this.events = events;
    return this;
  }

   /**
   * Get events
   * @return events
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public APIConfigEvents getEvents() {
    return events;
  }


  public void setEvents(APIConfigEvents events) {
    this.events = events;
  }


  public APIConfig forceUseLatestWorld(Boolean forceUseLatestWorld) {
    
    this.forceUseLatestWorld = forceUseLatestWorld;
    return this;
  }

   /**
   * Unknown
   * @return forceUseLatestWorld
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Boolean getForceUseLatestWorld() {
    return forceUseLatestWorld;
  }


  public void setForceUseLatestWorld(Boolean forceUseLatestWorld) {
    this.forceUseLatestWorld = forceUseLatestWorld;
  }


  public APIConfig giftDisplayType(String giftDisplayType) {
    
    this.giftDisplayType = giftDisplayType;
    return this;
  }

   /**
   * Display type of gifts
   * @return giftDisplayType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Display type of gifts")

  public String getGiftDisplayType() {
    return giftDisplayType;
  }


  public void setGiftDisplayType(String giftDisplayType) {
    this.giftDisplayType = giftDisplayType;
  }


  public APIConfig googleApiClientId(String googleApiClientId) {
    
    this.googleApiClientId = googleApiClientId;
    return this;
  }

   /**
   * Unknown
   * @return googleApiClientId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public String getGoogleApiClientId() {
    return googleApiClientId;
  }


  public void setGoogleApiClientId(String googleApiClientId) {
    this.googleApiClientId = googleApiClientId;
  }


  public APIConfig homeWorldId(String homeWorldId) {
    
    this.homeWorldId = homeWorldId;
    return this;
  }

   /**
   * WorldID be \&quot;offline\&quot; on User profiles if you are not friends with that user.
   * @return homeWorldId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "wrld_ba913a96-fac4-4048-a062-9aa5db092812", required = true, value = "WorldID be \"offline\" on User profiles if you are not friends with that user.")

  public String getHomeWorldId() {
    return homeWorldId;
  }


  public void setHomeWorldId(String homeWorldId) {
    this.homeWorldId = homeWorldId;
  }


  public APIConfig homepageRedirectTarget(String homepageRedirectTarget) {
    
    this.homepageRedirectTarget = homepageRedirectTarget;
    return this;
  }

   /**
   * Redirect target if you try to open the base API domain in your browser
   * @return homepageRedirectTarget
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Redirect target if you try to open the base API domain in your browser")

  public String getHomepageRedirectTarget() {
    return homepageRedirectTarget;
  }


  public void setHomepageRedirectTarget(String homepageRedirectTarget) {
    this.homepageRedirectTarget = homepageRedirectTarget;
  }


  public APIConfig hubWorldId(String hubWorldId) {
    
    this.hubWorldId = hubWorldId;
    return this;
  }

   /**
   * WorldID be \&quot;offline\&quot; on User profiles if you are not friends with that user.
   * @return hubWorldId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "wrld_ba913a96-fac4-4048-a062-9aa5db092812", required = true, value = "WorldID be \"offline\" on User profiles if you are not friends with that user.")

  public String getHubWorldId() {
    return hubWorldId;
  }


  public void setHubWorldId(String hubWorldId) {
    this.hubWorldId = hubWorldId;
  }


  public APIConfig imageHostUrlList(List<String> imageHostUrlList) {
    
    this.imageHostUrlList = imageHostUrlList;
    return this;
  }

  public APIConfig addImageHostUrlListItem(String imageHostUrlListItem) {
    this.imageHostUrlList.add(imageHostUrlListItem);
    return this;
  }

   /**
   * A list of explicitly allowed origins that worlds can request images from via the Udon&#39;s [VRCImageDownloader#DownloadImage](https://creators.vrchat.com/worlds/udon/image-loading/#downloadimage).
   * @return imageHostUrlList
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A list of explicitly allowed origins that worlds can request images from via the Udon's [VRCImageDownloader#DownloadImage](https://creators.vrchat.com/worlds/udon/image-loading/#downloadimage).")

  public List<String> getImageHostUrlList() {
    return imageHostUrlList;
  }


  public void setImageHostUrlList(List<String> imageHostUrlList) {
    this.imageHostUrlList = imageHostUrlList;
  }


  public APIConfig jobsEmail(String jobsEmail) {
    
    this.jobsEmail = jobsEmail;
    return this;
  }

   /**
   * VRChat&#39;s job application email
   * @return jobsEmail
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "VRChat's job application email")

  public String getJobsEmail() {
    return jobsEmail;
  }


  public void setJobsEmail(String jobsEmail) {
    this.jobsEmail = jobsEmail;
  }


  public APIConfig minSupportedClientBuildNumber(APIConfigMinSupportedClientBuildNumber minSupportedClientBuildNumber) {
    
    this.minSupportedClientBuildNumber = minSupportedClientBuildNumber;
    return this;
  }

   /**
   * Get minSupportedClientBuildNumber
   * @return minSupportedClientBuildNumber
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public APIConfigMinSupportedClientBuildNumber getMinSupportedClientBuildNumber() {
    return minSupportedClientBuildNumber;
  }


  public void setMinSupportedClientBuildNumber(APIConfigMinSupportedClientBuildNumber minSupportedClientBuildNumber) {
    this.minSupportedClientBuildNumber = minSupportedClientBuildNumber;
  }


  public APIConfig minimumUnityVersionForUploads(String minimumUnityVersionForUploads) {
    
    this.minimumUnityVersionForUploads = minimumUnityVersionForUploads;
    return this;
  }

   /**
   * Minimum Unity version required for uploading assets
   * @return minimumUnityVersionForUploads
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Minimum Unity version required for uploading assets")

  public String getMinimumUnityVersionForUploads() {
    return minimumUnityVersionForUploads;
  }


  public void setMinimumUnityVersionForUploads(String minimumUnityVersionForUploads) {
    this.minimumUnityVersionForUploads = minimumUnityVersionForUploads;
  }


  public APIConfig moderationEmail(String moderationEmail) {
    
    this.moderationEmail = moderationEmail;
    return this;
  }

   /**
   * VRChat&#39;s moderation related email
   * @return moderationEmail
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "VRChat's moderation related email")

  public String getModerationEmail() {
    return moderationEmail;
  }


  public void setModerationEmail(String moderationEmail) {
    this.moderationEmail = moderationEmail;
  }


  public APIConfig notAllowedToSelectAvatarInPrivateWorldMessage(String notAllowedToSelectAvatarInPrivateWorldMessage) {
    
    this.notAllowedToSelectAvatarInPrivateWorldMessage = notAllowedToSelectAvatarInPrivateWorldMessage;
    return this;
  }

   /**
   * Used in-game to notify a user they aren&#39;t allowed to select avatars in private worlds
   * @return notAllowedToSelectAvatarInPrivateWorldMessage
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Used in-game to notify a user they aren't allowed to select avatars in private worlds")

  public String getNotAllowedToSelectAvatarInPrivateWorldMessage() {
    return notAllowedToSelectAvatarInPrivateWorldMessage;
  }


  public void setNotAllowedToSelectAvatarInPrivateWorldMessage(String notAllowedToSelectAvatarInPrivateWorldMessage) {
    this.notAllowedToSelectAvatarInPrivateWorldMessage = notAllowedToSelectAvatarInPrivateWorldMessage;
  }


  public APIConfig offlineAnalysis(APIConfigOfflineAnalysis offlineAnalysis) {
    
    this.offlineAnalysis = offlineAnalysis;
    return this;
  }

   /**
   * Get offlineAnalysis
   * @return offlineAnalysis
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public APIConfigOfflineAnalysis getOfflineAnalysis() {
    return offlineAnalysis;
  }


  public void setOfflineAnalysis(APIConfigOfflineAnalysis offlineAnalysis) {
    this.offlineAnalysis = offlineAnalysis;
  }


  public APIConfig photonNameserverOverrides(List<String> photonNameserverOverrides) {
    
    this.photonNameserverOverrides = photonNameserverOverrides;
    return this;
  }

  public APIConfig addPhotonNameserverOverridesItem(String photonNameserverOverridesItem) {
    this.photonNameserverOverrides.add(photonNameserverOverridesItem);
    return this;
  }

   /**
   * Unknown
   * @return photonNameserverOverrides
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public List<String> getPhotonNameserverOverrides() {
    return photonNameserverOverrides;
  }


  public void setPhotonNameserverOverrides(List<String> photonNameserverOverrides) {
    this.photonNameserverOverrides = photonNameserverOverrides;
  }


  public APIConfig photonPublicKeys(List<String> photonPublicKeys) {
    
    this.photonPublicKeys = photonPublicKeys;
    return this;
  }

  public APIConfig addPhotonPublicKeysItem(String photonPublicKeysItem) {
    this.photonPublicKeys.add(photonPublicKeysItem);
    return this;
  }

   /**
   * Unknown
   * @return photonPublicKeys
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public List<String> getPhotonPublicKeys() {
    return photonPublicKeys;
  }


  public void setPhotonPublicKeys(List<String> photonPublicKeys) {
    this.photonPublicKeys = photonPublicKeys;
  }


  public APIConfig reportCategories(APIConfigReportCategories reportCategories) {
    
    this.reportCategories = reportCategories;
    return this;
  }

   /**
   * Get reportCategories
   * @return reportCategories
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public APIConfigReportCategories getReportCategories() {
    return reportCategories;
  }


  public void setReportCategories(APIConfigReportCategories reportCategories) {
    this.reportCategories = reportCategories;
  }


  public APIConfig reportFormUrl(String reportFormUrl) {
    
    this.reportFormUrl = reportFormUrl;
    return this;
  }

   /**
   * URL to the report form
   * @return reportFormUrl
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "URL to the report form")

  public String getReportFormUrl() {
    return reportFormUrl;
  }


  public void setReportFormUrl(String reportFormUrl) {
    this.reportFormUrl = reportFormUrl;
  }


  public APIConfig reportOptions(APIConfigReportOptions reportOptions) {
    
    this.reportOptions = reportOptions;
    return this;
  }

   /**
   * Get reportOptions
   * @return reportOptions
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public APIConfigReportOptions getReportOptions() {
    return reportOptions;
  }


  public void setReportOptions(APIConfigReportOptions reportOptions) {
    this.reportOptions = reportOptions;
  }


  public APIConfig reportReasons(APIConfigReportReasons reportReasons) {
    
    this.reportReasons = reportReasons;
    return this;
  }

   /**
   * Get reportReasons
   * @return reportReasons
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public APIConfigReportReasons getReportReasons() {
    return reportReasons;
  }


  public void setReportReasons(APIConfigReportReasons reportReasons) {
    this.reportReasons = reportReasons;
  }


  public APIConfig requireAgeVerificationBetaTag(Boolean requireAgeVerificationBetaTag) {
    
    this.requireAgeVerificationBetaTag = requireAgeVerificationBetaTag;
    return this;
  }

   /**
   * Get requireAgeVerificationBetaTag
   * @return requireAgeVerificationBetaTag
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getRequireAgeVerificationBetaTag() {
    return requireAgeVerificationBetaTag;
  }


  public void setRequireAgeVerificationBetaTag(Boolean requireAgeVerificationBetaTag) {
    this.requireAgeVerificationBetaTag = requireAgeVerificationBetaTag;
  }


  public APIConfig sdkDeveloperFaqUrl(String sdkDeveloperFaqUrl) {
    
    this.sdkDeveloperFaqUrl = sdkDeveloperFaqUrl;
    return this;
  }

   /**
   * Link to the developer FAQ
   * @return sdkDeveloperFaqUrl
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Link to the developer FAQ")

  public String getSdkDeveloperFaqUrl() {
    return sdkDeveloperFaqUrl;
  }


  public void setSdkDeveloperFaqUrl(String sdkDeveloperFaqUrl) {
    this.sdkDeveloperFaqUrl = sdkDeveloperFaqUrl;
  }


  public APIConfig sdkDiscordUrl(String sdkDiscordUrl) {
    
    this.sdkDiscordUrl = sdkDiscordUrl;
    return this;
  }

   /**
   * Link to the official VRChat Discord
   * @return sdkDiscordUrl
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Link to the official VRChat Discord")

  public String getSdkDiscordUrl() {
    return sdkDiscordUrl;
  }


  public void setSdkDiscordUrl(String sdkDiscordUrl) {
    this.sdkDiscordUrl = sdkDiscordUrl;
  }


  public APIConfig sdkNotAllowedToPublishMessage(String sdkNotAllowedToPublishMessage) {
    
    this.sdkNotAllowedToPublishMessage = sdkNotAllowedToPublishMessage;
    return this;
  }

   /**
   * Used in the SDK to notify a user they aren&#39;t allowed to upload avatars/worlds yet
   * @return sdkNotAllowedToPublishMessage
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Used in the SDK to notify a user they aren't allowed to upload avatars/worlds yet")

  public String getSdkNotAllowedToPublishMessage() {
    return sdkNotAllowedToPublishMessage;
  }


  public void setSdkNotAllowedToPublishMessage(String sdkNotAllowedToPublishMessage) {
    this.sdkNotAllowedToPublishMessage = sdkNotAllowedToPublishMessage;
  }


  public APIConfig sdkUnityVersion(String sdkUnityVersion) {
    
    this.sdkUnityVersion = sdkUnityVersion;
    return this;
  }

   /**
   * Unity version supported by the SDK
   * @return sdkUnityVersion
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unity version supported by the SDK")

  public String getSdkUnityVersion() {
    return sdkUnityVersion;
  }


  public void setSdkUnityVersion(String sdkUnityVersion) {
    this.sdkUnityVersion = sdkUnityVersion;
  }


  public APIConfig stringHostUrlList(List<String> stringHostUrlList) {
    
    this.stringHostUrlList = stringHostUrlList;
    return this;
  }

  public APIConfig addStringHostUrlListItem(String stringHostUrlListItem) {
    this.stringHostUrlList.add(stringHostUrlListItem);
    return this;
  }

   /**
   * A list of explicitly allowed origins that worlds can request strings from via the Udon&#39;s [VRCStringDownloader.LoadUrl](https://creators.vrchat.com/worlds/udon/string-loading/#ivrcstringdownload).
   * @return stringHostUrlList
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A list of explicitly allowed origins that worlds can request strings from via the Udon's [VRCStringDownloader.LoadUrl](https://creators.vrchat.com/worlds/udon/string-loading/#ivrcstringdownload).")

  public List<String> getStringHostUrlList() {
    return stringHostUrlList;
  }


  public void setStringHostUrlList(List<String> stringHostUrlList) {
    this.stringHostUrlList = stringHostUrlList;
  }


  public APIConfig supportEmail(String supportEmail) {
    
    this.supportEmail = supportEmail;
    return this;
  }

   /**
   * VRChat&#39;s support email
   * @return supportEmail
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "VRChat's support email")

  public String getSupportEmail() {
    return supportEmail;
  }


  public void setSupportEmail(String supportEmail) {
    this.supportEmail = supportEmail;
  }


  public APIConfig supportFormUrl(String supportFormUrl) {
    
    this.supportFormUrl = supportFormUrl;
    return this;
  }

   /**
   * VRChat&#39;s support form
   * @return supportFormUrl
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "VRChat's support form")

  public String getSupportFormUrl() {
    return supportFormUrl;
  }


  public void setSupportFormUrl(String supportFormUrl) {
    this.supportFormUrl = supportFormUrl;
  }


  public APIConfig timekeeping(Boolean timekeeping) {
    
    this.timekeeping = timekeeping;
    return this;
  }

   /**
   * Unknown
   * @return timekeeping
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Boolean getTimekeeping() {
    return timekeeping;
  }


  public void setTimekeeping(Boolean timekeeping) {
    this.timekeeping = timekeeping;
  }


  public APIConfig timeOutWorldId(String timeOutWorldId) {
    
    this.timeOutWorldId = timeOutWorldId;
    return this;
  }

   /**
   * WorldID be \&quot;offline\&quot; on User profiles if you are not friends with that user.
   * @return timeOutWorldId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "wrld_ba913a96-fac4-4048-a062-9aa5db092812", required = true, value = "WorldID be \"offline\" on User profiles if you are not friends with that user.")

  public String getTimeOutWorldId() {
    return timeOutWorldId;
  }


  public void setTimeOutWorldId(String timeOutWorldId) {
    this.timeOutWorldId = timeOutWorldId;
  }


  public APIConfig tutorialWorldId(String tutorialWorldId) {
    
    this.tutorialWorldId = tutorialWorldId;
    return this;
  }

   /**
   * WorldID be \&quot;offline\&quot; on User profiles if you are not friends with that user.
   * @return tutorialWorldId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "wrld_ba913a96-fac4-4048-a062-9aa5db092812", required = true, value = "WorldID be \"offline\" on User profiles if you are not friends with that user.")

  public String getTutorialWorldId() {
    return tutorialWorldId;
  }


  public void setTutorialWorldId(String tutorialWorldId) {
    this.tutorialWorldId = tutorialWorldId;
  }


  public APIConfig updateRateMsMaximum(Integer updateRateMsMaximum) {
    
    this.updateRateMsMaximum = updateRateMsMaximum;
    return this;
  }

   /**
   * Unknown
   * @return updateRateMsMaximum
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getUpdateRateMsMaximum() {
    return updateRateMsMaximum;
  }


  public void setUpdateRateMsMaximum(Integer updateRateMsMaximum) {
    this.updateRateMsMaximum = updateRateMsMaximum;
  }


  public APIConfig updateRateMsMinimum(Integer updateRateMsMinimum) {
    
    this.updateRateMsMinimum = updateRateMsMinimum;
    return this;
  }

   /**
   * Unknown
   * @return updateRateMsMinimum
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getUpdateRateMsMinimum() {
    return updateRateMsMinimum;
  }


  public void setUpdateRateMsMinimum(Integer updateRateMsMinimum) {
    this.updateRateMsMinimum = updateRateMsMinimum;
  }


  public APIConfig updateRateMsNormal(Integer updateRateMsNormal) {
    
    this.updateRateMsNormal = updateRateMsNormal;
    return this;
  }

   /**
   * Unknown
   * @return updateRateMsNormal
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getUpdateRateMsNormal() {
    return updateRateMsNormal;
  }


  public void setUpdateRateMsNormal(Integer updateRateMsNormal) {
    this.updateRateMsNormal = updateRateMsNormal;
  }


  public APIConfig updateRateMsUdonManual(Integer updateRateMsUdonManual) {
    
    this.updateRateMsUdonManual = updateRateMsUdonManual;
    return this;
  }

   /**
   * Unknown
   * @return updateRateMsUdonManual
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getUpdateRateMsUdonManual() {
    return updateRateMsUdonManual;
  }


  public void setUpdateRateMsUdonManual(Integer updateRateMsUdonManual) {
    this.updateRateMsUdonManual = updateRateMsUdonManual;
  }


  public APIConfig uploadAnalysisPercent(Integer uploadAnalysisPercent) {
    
    this.uploadAnalysisPercent = uploadAnalysisPercent;
    return this;
  }

   /**
   * Unknown
   * @return uploadAnalysisPercent
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getUploadAnalysisPercent() {
    return uploadAnalysisPercent;
  }


  public void setUploadAnalysisPercent(Integer uploadAnalysisPercent) {
    this.uploadAnalysisPercent = uploadAnalysisPercent;
  }


  public APIConfig urlList(List<String> urlList) {
    
    this.urlList = urlList;
    return this;
  }

  public APIConfig addUrlListItem(String urlListItem) {
    this.urlList.add(urlListItem);
    return this;
  }

   /**
   * List of allowed URLs that bypass the \&quot;Allow untrusted URL&#39;s\&quot; setting in-game
   * @return urlList
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "List of allowed URLs that bypass the \"Allow untrusted URL's\" setting in-game")

  public List<String> getUrlList() {
    return urlList;
  }


  public void setUrlList(List<String> urlList) {
    this.urlList = urlList;
  }


  public APIConfig useReliableUdpForVoice(Boolean useReliableUdpForVoice) {
    
    this.useReliableUdpForVoice = useReliableUdpForVoice;
    return this;
  }

   /**
   * Unknown
   * @return useReliableUdpForVoice
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Boolean getUseReliableUdpForVoice() {
    return useReliableUdpForVoice;
  }


  public void setUseReliableUdpForVoice(Boolean useReliableUdpForVoice) {
    this.useReliableUdpForVoice = useReliableUdpForVoice;
  }


  public APIConfig viveWindowsUrl(String viveWindowsUrl) {
    
    this.viveWindowsUrl = viveWindowsUrl;
    return this;
  }

   /**
   * Download link for game on the Steam website.
   * @return viveWindowsUrl
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Download link for game on the Steam website.")

  public String getViveWindowsUrl() {
    return viveWindowsUrl;
  }


  public void setViveWindowsUrl(String viveWindowsUrl) {
    this.viveWindowsUrl = viveWindowsUrl;
  }


  public APIConfig whiteListedAssetUrls(List<String> whiteListedAssetUrls) {
    
    this.whiteListedAssetUrls = whiteListedAssetUrls;
    return this;
  }

  public APIConfig addWhiteListedAssetUrlsItem(String whiteListedAssetUrlsItem) {
    this.whiteListedAssetUrls.add(whiteListedAssetUrlsItem);
    return this;
  }

   /**
   * List of allowed URLs that are allowed to host avatar assets
   * @return whiteListedAssetUrls
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "List of allowed URLs that are allowed to host avatar assets")

  public List<String> getWhiteListedAssetUrls() {
    return whiteListedAssetUrls;
  }


  public void setWhiteListedAssetUrls(List<String> whiteListedAssetUrls) {
    this.whiteListedAssetUrls = whiteListedAssetUrls;
  }


  public APIConfig playerUrlResolverVersion(String playerUrlResolverVersion) {
    
    this.playerUrlResolverVersion = playerUrlResolverVersion;
    return this;
  }

   /**
   * Currently used youtube-dl.exe version
   * @return playerUrlResolverVersion
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Currently used youtube-dl.exe version")

  public String getPlayerUrlResolverVersion() {
    return playerUrlResolverVersion;
  }


  public void setPlayerUrlResolverVersion(String playerUrlResolverVersion) {
    this.playerUrlResolverVersion = playerUrlResolverVersion;
  }


  public APIConfig playerUrlResolverSha1(String playerUrlResolverSha1) {
    
    this.playerUrlResolverSha1 = playerUrlResolverSha1;
    return this;
  }

   /**
   * Currently used youtube-dl.exe hash in SHA1-delimited format
   * @return playerUrlResolverSha1
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Currently used youtube-dl.exe hash in SHA1-delimited format")

  public String getPlayerUrlResolverSha1() {
    return playerUrlResolverSha1;
  }


  public void setPlayerUrlResolverSha1(String playerUrlResolverSha1) {
    this.playerUrlResolverSha1 = playerUrlResolverSha1;
  }


  public APIConfig publicKey(String publicKey) {
    
    this.publicKey = publicKey;
    return this;
  }

   /**
   * Public key, hex encoded
   * @return publicKey
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Public key, hex encoded")

  public String getPublicKey() {
    return publicKey;
  }


  public void setPublicKey(String publicKey) {
    this.publicKey = publicKey;
  }


  public APIConfig websocketMaxFriendsRefreshDelay(Integer websocketMaxFriendsRefreshDelay) {
    
    this.websocketMaxFriendsRefreshDelay = websocketMaxFriendsRefreshDelay;
    return this;
  }

   /**
   * Unknown
   * @return websocketMaxFriendsRefreshDelay
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getWebsocketMaxFriendsRefreshDelay() {
    return websocketMaxFriendsRefreshDelay;
  }


  public void setWebsocketMaxFriendsRefreshDelay(Integer websocketMaxFriendsRefreshDelay) {
    this.websocketMaxFriendsRefreshDelay = websocketMaxFriendsRefreshDelay;
  }


  public APIConfig websocketQuickReconnectTime(Integer websocketQuickReconnectTime) {
    
    this.websocketQuickReconnectTime = websocketQuickReconnectTime;
    return this;
  }

   /**
   * Unknown
   * @return websocketQuickReconnectTime
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getWebsocketQuickReconnectTime() {
    return websocketQuickReconnectTime;
  }


  public void setWebsocketQuickReconnectTime(Integer websocketQuickReconnectTime) {
    this.websocketQuickReconnectTime = websocketQuickReconnectTime;
  }


  public APIConfig websocketReconnectMaxDelay(Integer websocketReconnectMaxDelay) {
    
    this.websocketReconnectMaxDelay = websocketReconnectMaxDelay;
    return this;
  }

   /**
   * Unknown
   * @return websocketReconnectMaxDelay
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unknown")

  public Integer getWebsocketReconnectMaxDelay() {
    return websocketReconnectMaxDelay;
  }


  public void setWebsocketReconnectMaxDelay(Integer websocketReconnectMaxDelay) {
    this.websocketReconnectMaxDelay = websocketReconnectMaxDelay;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    APIConfig apIConfig = (APIConfig) o;
    return Objects.equals(this.voiceEnableDegradation, apIConfig.voiceEnableDegradation) &&
        Objects.equals(this.voiceEnableReceiverLimiting, apIConfig.voiceEnableReceiverLimiting) &&
        Objects.equals(this.accessLogsUrls, apIConfig.accessLogsUrls) &&
        Objects.equals(this.address, apIConfig.address) &&
        Objects.equals(this.ageVerificationInviteVisible, apIConfig.ageVerificationInviteVisible) &&
        Objects.equals(this.ageVerificationP, apIConfig.ageVerificationP) &&
        Objects.equals(this.ageVerificationStatusVisible, apIConfig.ageVerificationStatusVisible) &&
        Objects.equals(this.analysisMaxRetries, apIConfig.analysisMaxRetries) &&
        Objects.equals(this.analysisRetryInterval, apIConfig.analysisRetryInterval) &&
        Objects.equals(this.announcements, apIConfig.announcements) &&
        Objects.equals(this.analyticsSegmentNewUIPctOfUsers, apIConfig.analyticsSegmentNewUIPctOfUsers) &&
        Objects.equals(this.analyticsSegmentNewUISalt, apIConfig.analyticsSegmentNewUISalt) &&
        Objects.equals(this.availableLanguageCodes, apIConfig.availableLanguageCodes) &&
        Objects.equals(this.availableLanguages, apIConfig.availableLanguages) &&
        Objects.equals(this.avatarPerfLimiter, apIConfig.avatarPerfLimiter) &&
        Objects.equals(this.chatboxLogBufferSeconds, apIConfig.chatboxLogBufferSeconds) &&
        Objects.equals(this.clientApiKey, apIConfig.clientApiKey) &&
        Objects.equals(this.clientBPSCeiling, apIConfig.clientBPSCeiling) &&
        Objects.equals(this.clientDisconnectTimeout, apIConfig.clientDisconnectTimeout) &&
        Objects.equals(this.clientNetDispatchThread, apIConfig.clientNetDispatchThread) &&
        Objects.equals(this.clientNetDispatchThreadMobile, apIConfig.clientNetDispatchThreadMobile) &&
        Objects.equals(this.clientNetInThread, apIConfig.clientNetInThread) &&
        Objects.equals(this.clientNetInThread2, apIConfig.clientNetInThread2) &&
        Objects.equals(this.clientNetInThreadMobile, apIConfig.clientNetInThreadMobile) &&
        Objects.equals(this.clientNetInThreadMobile2, apIConfig.clientNetInThreadMobile2) &&
        Objects.equals(this.clientNetOutThread, apIConfig.clientNetOutThread) &&
        Objects.equals(this.clientNetOutThread2, apIConfig.clientNetOutThread2) &&
        Objects.equals(this.clientNetOutThreadMobile, apIConfig.clientNetOutThreadMobile) &&
        Objects.equals(this.clientNetOutThreadMobile2, apIConfig.clientNetOutThreadMobile2) &&
        Objects.equals(this.clientQR, apIConfig.clientQR) &&
        Objects.equals(this.clientReservedPlayerBPS, apIConfig.clientReservedPlayerBPS) &&
        Objects.equals(this.clientSentCountAllowance, apIConfig.clientSentCountAllowance) &&
        Objects.equals(this.constants, apIConfig.constants) &&
        Objects.equals(this.contactEmail, apIConfig.contactEmail) &&
        Objects.equals(this.copyrightEmail, apIConfig.copyrightEmail) &&
        Objects.equals(this.currentPrivacyVersion, apIConfig.currentPrivacyVersion) &&
        Objects.equals(this.currentTOSVersion, apIConfig.currentTOSVersion) &&
        Objects.equals(this.defaultAvatar, apIConfig.defaultAvatar) &&
        Objects.equals(this.defaultStickerSet, apIConfig.defaultStickerSet) &&
        Objects.equals(this.devLanguageCodes, apIConfig.devLanguageCodes) &&
        Objects.equals(this.devSdkUrl, apIConfig.devSdkUrl) &&
        Objects.equals(this.devSdkVersion, apIConfig.devSdkVersion) &&
        Objects.equals(this.disCountdown, apIConfig.disCountdown) &&
        Objects.equals(this.disableAVProInProton, apIConfig.disableAVProInProton) &&
        Objects.equals(this.disableAvatarCopying, apIConfig.disableAvatarCopying) &&
        Objects.equals(this.disableAvatarGating, apIConfig.disableAvatarGating) &&
        Objects.equals(this.disableCommunityLabs, apIConfig.disableCommunityLabs) &&
        Objects.equals(this.disableCommunityLabsPromotion, apIConfig.disableCommunityLabsPromotion) &&
        Objects.equals(this.disableEmail, apIConfig.disableEmail) &&
        Objects.equals(this.disableCaptcha, apIConfig.disableCaptcha) &&
        Objects.equals(this.disableEventStream, apIConfig.disableEventStream) &&
        Objects.equals(this.disableFeedbackGating, apIConfig.disableFeedbackGating) &&
        Objects.equals(this.disableFrontendBuilds, apIConfig.disableFrontendBuilds) &&
        Objects.equals(this.disableGiftDrops, apIConfig.disableGiftDrops) &&
        Objects.equals(this.disableHello, apIConfig.disableHello) &&
        Objects.equals(this.disableOculusSubs, apIConfig.disableOculusSubs) &&
        Objects.equals(this.disableRegistration, apIConfig.disableRegistration) &&
        Objects.equals(this.disableSteamNetworking, apIConfig.disableSteamNetworking) &&
        Objects.equals(this.disableTwoFactorAuth, apIConfig.disableTwoFactorAuth) &&
        Objects.equals(this.disableUdon, apIConfig.disableUdon) &&
        Objects.equals(this.disableUpgradeAccount, apIConfig.disableUpgradeAccount) &&
        Objects.equals(this.downloadLinkWindows, apIConfig.downloadLinkWindows) &&
        Objects.equals(this.downloadUrls, apIConfig.downloadUrls) &&
        Objects.equals(this.dynamicWorldRows, apIConfig.dynamicWorldRows) &&
        Objects.equals(this.economyPauseEnd, apIConfig.economyPauseEnd) &&
        Objects.equals(this.economyPauseStart, apIConfig.economyPauseStart) &&
        Objects.equals(this.economyState, apIConfig.economyState) &&
        Objects.equals(this.events, apIConfig.events) &&
        Objects.equals(this.forceUseLatestWorld, apIConfig.forceUseLatestWorld) &&
        Objects.equals(this.giftDisplayType, apIConfig.giftDisplayType) &&
        Objects.equals(this.googleApiClientId, apIConfig.googleApiClientId) &&
        Objects.equals(this.homeWorldId, apIConfig.homeWorldId) &&
        Objects.equals(this.homepageRedirectTarget, apIConfig.homepageRedirectTarget) &&
        Objects.equals(this.hubWorldId, apIConfig.hubWorldId) &&
        Objects.equals(this.imageHostUrlList, apIConfig.imageHostUrlList) &&
        Objects.equals(this.jobsEmail, apIConfig.jobsEmail) &&
        Objects.equals(this.minSupportedClientBuildNumber, apIConfig.minSupportedClientBuildNumber) &&
        Objects.equals(this.minimumUnityVersionForUploads, apIConfig.minimumUnityVersionForUploads) &&
        Objects.equals(this.moderationEmail, apIConfig.moderationEmail) &&
        Objects.equals(this.notAllowedToSelectAvatarInPrivateWorldMessage, apIConfig.notAllowedToSelectAvatarInPrivateWorldMessage) &&
        Objects.equals(this.offlineAnalysis, apIConfig.offlineAnalysis) &&
        Objects.equals(this.photonNameserverOverrides, apIConfig.photonNameserverOverrides) &&
        Objects.equals(this.photonPublicKeys, apIConfig.photonPublicKeys) &&
        Objects.equals(this.reportCategories, apIConfig.reportCategories) &&
        Objects.equals(this.reportFormUrl, apIConfig.reportFormUrl) &&
        Objects.equals(this.reportOptions, apIConfig.reportOptions) &&
        Objects.equals(this.reportReasons, apIConfig.reportReasons) &&
        Objects.equals(this.requireAgeVerificationBetaTag, apIConfig.requireAgeVerificationBetaTag) &&
        Objects.equals(this.sdkDeveloperFaqUrl, apIConfig.sdkDeveloperFaqUrl) &&
        Objects.equals(this.sdkDiscordUrl, apIConfig.sdkDiscordUrl) &&
        Objects.equals(this.sdkNotAllowedToPublishMessage, apIConfig.sdkNotAllowedToPublishMessage) &&
        Objects.equals(this.sdkUnityVersion, apIConfig.sdkUnityVersion) &&
        Objects.equals(this.stringHostUrlList, apIConfig.stringHostUrlList) &&
        Objects.equals(this.supportEmail, apIConfig.supportEmail) &&
        Objects.equals(this.supportFormUrl, apIConfig.supportFormUrl) &&
        Objects.equals(this.timekeeping, apIConfig.timekeeping) &&
        Objects.equals(this.timeOutWorldId, apIConfig.timeOutWorldId) &&
        Objects.equals(this.tutorialWorldId, apIConfig.tutorialWorldId) &&
        Objects.equals(this.updateRateMsMaximum, apIConfig.updateRateMsMaximum) &&
        Objects.equals(this.updateRateMsMinimum, apIConfig.updateRateMsMinimum) &&
        Objects.equals(this.updateRateMsNormal, apIConfig.updateRateMsNormal) &&
        Objects.equals(this.updateRateMsUdonManual, apIConfig.updateRateMsUdonManual) &&
        Objects.equals(this.uploadAnalysisPercent, apIConfig.uploadAnalysisPercent) &&
        Objects.equals(this.urlList, apIConfig.urlList) &&
        Objects.equals(this.useReliableUdpForVoice, apIConfig.useReliableUdpForVoice) &&
        Objects.equals(this.viveWindowsUrl, apIConfig.viveWindowsUrl) &&
        Objects.equals(this.whiteListedAssetUrls, apIConfig.whiteListedAssetUrls) &&
        Objects.equals(this.playerUrlResolverVersion, apIConfig.playerUrlResolverVersion) &&
        Objects.equals(this.playerUrlResolverSha1, apIConfig.playerUrlResolverSha1) &&
        Objects.equals(this.publicKey, apIConfig.publicKey) &&
        Objects.equals(this.websocketMaxFriendsRefreshDelay, apIConfig.websocketMaxFriendsRefreshDelay) &&
        Objects.equals(this.websocketQuickReconnectTime, apIConfig.websocketQuickReconnectTime) &&
        Objects.equals(this.websocketReconnectMaxDelay, apIConfig.websocketReconnectMaxDelay);
  }

  @Override
  public int hashCode() {
    return Objects.hash(voiceEnableDegradation, voiceEnableReceiverLimiting, accessLogsUrls, address, ageVerificationInviteVisible, ageVerificationP, ageVerificationStatusVisible, analysisMaxRetries, analysisRetryInterval, announcements, analyticsSegmentNewUIPctOfUsers, analyticsSegmentNewUISalt, availableLanguageCodes, availableLanguages, avatarPerfLimiter, chatboxLogBufferSeconds, clientApiKey, clientBPSCeiling, clientDisconnectTimeout, clientNetDispatchThread, clientNetDispatchThreadMobile, clientNetInThread, clientNetInThread2, clientNetInThreadMobile, clientNetInThreadMobile2, clientNetOutThread, clientNetOutThread2, clientNetOutThreadMobile, clientNetOutThreadMobile2, clientQR, clientReservedPlayerBPS, clientSentCountAllowance, constants, contactEmail, copyrightEmail, currentPrivacyVersion, currentTOSVersion, defaultAvatar, defaultStickerSet, devLanguageCodes, devSdkUrl, devSdkVersion, disCountdown, disableAVProInProton, disableAvatarCopying, disableAvatarGating, disableCommunityLabs, disableCommunityLabsPromotion, disableEmail, disableCaptcha, disableEventStream, disableFeedbackGating, disableFrontendBuilds, disableGiftDrops, disableHello, disableOculusSubs, disableRegistration, disableSteamNetworking, disableTwoFactorAuth, disableUdon, disableUpgradeAccount, downloadLinkWindows, downloadUrls, dynamicWorldRows, economyPauseEnd, economyPauseStart, economyState, events, forceUseLatestWorld, giftDisplayType, googleApiClientId, homeWorldId, homepageRedirectTarget, hubWorldId, imageHostUrlList, jobsEmail, minSupportedClientBuildNumber, minimumUnityVersionForUploads, moderationEmail, notAllowedToSelectAvatarInPrivateWorldMessage, offlineAnalysis, photonNameserverOverrides, photonPublicKeys, reportCategories, reportFormUrl, reportOptions, reportReasons, requireAgeVerificationBetaTag, sdkDeveloperFaqUrl, sdkDiscordUrl, sdkNotAllowedToPublishMessage, sdkUnityVersion, stringHostUrlList, supportEmail, supportFormUrl, timekeeping, timeOutWorldId, tutorialWorldId, updateRateMsMaximum, updateRateMsMinimum, updateRateMsNormal, updateRateMsUdonManual, uploadAnalysisPercent, urlList, useReliableUdpForVoice, viveWindowsUrl, whiteListedAssetUrls, playerUrlResolverVersion, playerUrlResolverSha1, publicKey, websocketMaxFriendsRefreshDelay, websocketQuickReconnectTime, websocketReconnectMaxDelay);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class APIConfig {\n");
    sb.append("    voiceEnableDegradation: ").append(toIndentedString(voiceEnableDegradation)).append("\n");
    sb.append("    voiceEnableReceiverLimiting: ").append(toIndentedString(voiceEnableReceiverLimiting)).append("\n");
    sb.append("    accessLogsUrls: ").append(toIndentedString(accessLogsUrls)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    ageVerificationInviteVisible: ").append(toIndentedString(ageVerificationInviteVisible)).append("\n");
    sb.append("    ageVerificationP: ").append(toIndentedString(ageVerificationP)).append("\n");
    sb.append("    ageVerificationStatusVisible: ").append(toIndentedString(ageVerificationStatusVisible)).append("\n");
    sb.append("    analysisMaxRetries: ").append(toIndentedString(analysisMaxRetries)).append("\n");
    sb.append("    analysisRetryInterval: ").append(toIndentedString(analysisRetryInterval)).append("\n");
    sb.append("    announcements: ").append(toIndentedString(announcements)).append("\n");
    sb.append("    analyticsSegmentNewUIPctOfUsers: ").append(toIndentedString(analyticsSegmentNewUIPctOfUsers)).append("\n");
    sb.append("    analyticsSegmentNewUISalt: ").append(toIndentedString(analyticsSegmentNewUISalt)).append("\n");
    sb.append("    availableLanguageCodes: ").append(toIndentedString(availableLanguageCodes)).append("\n");
    sb.append("    availableLanguages: ").append(toIndentedString(availableLanguages)).append("\n");
    sb.append("    avatarPerfLimiter: ").append(toIndentedString(avatarPerfLimiter)).append("\n");
    sb.append("    chatboxLogBufferSeconds: ").append(toIndentedString(chatboxLogBufferSeconds)).append("\n");
    sb.append("    clientApiKey: ").append(toIndentedString(clientApiKey)).append("\n");
    sb.append("    clientBPSCeiling: ").append(toIndentedString(clientBPSCeiling)).append("\n");
    sb.append("    clientDisconnectTimeout: ").append(toIndentedString(clientDisconnectTimeout)).append("\n");
    sb.append("    clientNetDispatchThread: ").append(toIndentedString(clientNetDispatchThread)).append("\n");
    sb.append("    clientNetDispatchThreadMobile: ").append(toIndentedString(clientNetDispatchThreadMobile)).append("\n");
    sb.append("    clientNetInThread: ").append(toIndentedString(clientNetInThread)).append("\n");
    sb.append("    clientNetInThread2: ").append(toIndentedString(clientNetInThread2)).append("\n");
    sb.append("    clientNetInThreadMobile: ").append(toIndentedString(clientNetInThreadMobile)).append("\n");
    sb.append("    clientNetInThreadMobile2: ").append(toIndentedString(clientNetInThreadMobile2)).append("\n");
    sb.append("    clientNetOutThread: ").append(toIndentedString(clientNetOutThread)).append("\n");
    sb.append("    clientNetOutThread2: ").append(toIndentedString(clientNetOutThread2)).append("\n");
    sb.append("    clientNetOutThreadMobile: ").append(toIndentedString(clientNetOutThreadMobile)).append("\n");
    sb.append("    clientNetOutThreadMobile2: ").append(toIndentedString(clientNetOutThreadMobile2)).append("\n");
    sb.append("    clientQR: ").append(toIndentedString(clientQR)).append("\n");
    sb.append("    clientReservedPlayerBPS: ").append(toIndentedString(clientReservedPlayerBPS)).append("\n");
    sb.append("    clientSentCountAllowance: ").append(toIndentedString(clientSentCountAllowance)).append("\n");
    sb.append("    constants: ").append(toIndentedString(constants)).append("\n");
    sb.append("    contactEmail: ").append(toIndentedString(contactEmail)).append("\n");
    sb.append("    copyrightEmail: ").append(toIndentedString(copyrightEmail)).append("\n");
    sb.append("    currentPrivacyVersion: ").append(toIndentedString(currentPrivacyVersion)).append("\n");
    sb.append("    currentTOSVersion: ").append(toIndentedString(currentTOSVersion)).append("\n");
    sb.append("    defaultAvatar: ").append(toIndentedString(defaultAvatar)).append("\n");
    sb.append("    defaultStickerSet: ").append(toIndentedString(defaultStickerSet)).append("\n");
    sb.append("    devLanguageCodes: ").append(toIndentedString(devLanguageCodes)).append("\n");
    sb.append("    devSdkUrl: ").append(toIndentedString(devSdkUrl)).append("\n");
    sb.append("    devSdkVersion: ").append(toIndentedString(devSdkVersion)).append("\n");
    sb.append("    disCountdown: ").append(toIndentedString(disCountdown)).append("\n");
    sb.append("    disableAVProInProton: ").append(toIndentedString(disableAVProInProton)).append("\n");
    sb.append("    disableAvatarCopying: ").append(toIndentedString(disableAvatarCopying)).append("\n");
    sb.append("    disableAvatarGating: ").append(toIndentedString(disableAvatarGating)).append("\n");
    sb.append("    disableCommunityLabs: ").append(toIndentedString(disableCommunityLabs)).append("\n");
    sb.append("    disableCommunityLabsPromotion: ").append(toIndentedString(disableCommunityLabsPromotion)).append("\n");
    sb.append("    disableEmail: ").append(toIndentedString(disableEmail)).append("\n");
    sb.append("    disableCaptcha: ").append(toIndentedString(disableCaptcha)).append("\n");
    sb.append("    disableEventStream: ").append(toIndentedString(disableEventStream)).append("\n");
    sb.append("    disableFeedbackGating: ").append(toIndentedString(disableFeedbackGating)).append("\n");
    sb.append("    disableFrontendBuilds: ").append(toIndentedString(disableFrontendBuilds)).append("\n");
    sb.append("    disableGiftDrops: ").append(toIndentedString(disableGiftDrops)).append("\n");
    sb.append("    disableHello: ").append(toIndentedString(disableHello)).append("\n");
    sb.append("    disableOculusSubs: ").append(toIndentedString(disableOculusSubs)).append("\n");
    sb.append("    disableRegistration: ").append(toIndentedString(disableRegistration)).append("\n");
    sb.append("    disableSteamNetworking: ").append(toIndentedString(disableSteamNetworking)).append("\n");
    sb.append("    disableTwoFactorAuth: ").append(toIndentedString(disableTwoFactorAuth)).append("\n");
    sb.append("    disableUdon: ").append(toIndentedString(disableUdon)).append("\n");
    sb.append("    disableUpgradeAccount: ").append(toIndentedString(disableUpgradeAccount)).append("\n");
    sb.append("    downloadLinkWindows: ").append(toIndentedString(downloadLinkWindows)).append("\n");
    sb.append("    downloadUrls: ").append(toIndentedString(downloadUrls)).append("\n");
    sb.append("    dynamicWorldRows: ").append(toIndentedString(dynamicWorldRows)).append("\n");
    sb.append("    economyPauseEnd: ").append(toIndentedString(economyPauseEnd)).append("\n");
    sb.append("    economyPauseStart: ").append(toIndentedString(economyPauseStart)).append("\n");
    sb.append("    economyState: ").append(toIndentedString(economyState)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("    forceUseLatestWorld: ").append(toIndentedString(forceUseLatestWorld)).append("\n");
    sb.append("    giftDisplayType: ").append(toIndentedString(giftDisplayType)).append("\n");
    sb.append("    googleApiClientId: ").append(toIndentedString(googleApiClientId)).append("\n");
    sb.append("    homeWorldId: ").append(toIndentedString(homeWorldId)).append("\n");
    sb.append("    homepageRedirectTarget: ").append(toIndentedString(homepageRedirectTarget)).append("\n");
    sb.append("    hubWorldId: ").append(toIndentedString(hubWorldId)).append("\n");
    sb.append("    imageHostUrlList: ").append(toIndentedString(imageHostUrlList)).append("\n");
    sb.append("    jobsEmail: ").append(toIndentedString(jobsEmail)).append("\n");
    sb.append("    minSupportedClientBuildNumber: ").append(toIndentedString(minSupportedClientBuildNumber)).append("\n");
    sb.append("    minimumUnityVersionForUploads: ").append(toIndentedString(minimumUnityVersionForUploads)).append("\n");
    sb.append("    moderationEmail: ").append(toIndentedString(moderationEmail)).append("\n");
    sb.append("    notAllowedToSelectAvatarInPrivateWorldMessage: ").append(toIndentedString(notAllowedToSelectAvatarInPrivateWorldMessage)).append("\n");
    sb.append("    offlineAnalysis: ").append(toIndentedString(offlineAnalysis)).append("\n");
    sb.append("    photonNameserverOverrides: ").append(toIndentedString(photonNameserverOverrides)).append("\n");
    sb.append("    photonPublicKeys: ").append(toIndentedString(photonPublicKeys)).append("\n");
    sb.append("    reportCategories: ").append(toIndentedString(reportCategories)).append("\n");
    sb.append("    reportFormUrl: ").append(toIndentedString(reportFormUrl)).append("\n");
    sb.append("    reportOptions: ").append(toIndentedString(reportOptions)).append("\n");
    sb.append("    reportReasons: ").append(toIndentedString(reportReasons)).append("\n");
    sb.append("    requireAgeVerificationBetaTag: ").append(toIndentedString(requireAgeVerificationBetaTag)).append("\n");
    sb.append("    sdkDeveloperFaqUrl: ").append(toIndentedString(sdkDeveloperFaqUrl)).append("\n");
    sb.append("    sdkDiscordUrl: ").append(toIndentedString(sdkDiscordUrl)).append("\n");
    sb.append("    sdkNotAllowedToPublishMessage: ").append(toIndentedString(sdkNotAllowedToPublishMessage)).append("\n");
    sb.append("    sdkUnityVersion: ").append(toIndentedString(sdkUnityVersion)).append("\n");
    sb.append("    stringHostUrlList: ").append(toIndentedString(stringHostUrlList)).append("\n");
    sb.append("    supportEmail: ").append(toIndentedString(supportEmail)).append("\n");
    sb.append("    supportFormUrl: ").append(toIndentedString(supportFormUrl)).append("\n");
    sb.append("    timekeeping: ").append(toIndentedString(timekeeping)).append("\n");
    sb.append("    timeOutWorldId: ").append(toIndentedString(timeOutWorldId)).append("\n");
    sb.append("    tutorialWorldId: ").append(toIndentedString(tutorialWorldId)).append("\n");
    sb.append("    updateRateMsMaximum: ").append(toIndentedString(updateRateMsMaximum)).append("\n");
    sb.append("    updateRateMsMinimum: ").append(toIndentedString(updateRateMsMinimum)).append("\n");
    sb.append("    updateRateMsNormal: ").append(toIndentedString(updateRateMsNormal)).append("\n");
    sb.append("    updateRateMsUdonManual: ").append(toIndentedString(updateRateMsUdonManual)).append("\n");
    sb.append("    uploadAnalysisPercent: ").append(toIndentedString(uploadAnalysisPercent)).append("\n");
    sb.append("    urlList: ").append(toIndentedString(urlList)).append("\n");
    sb.append("    useReliableUdpForVoice: ").append(toIndentedString(useReliableUdpForVoice)).append("\n");
    sb.append("    viveWindowsUrl: ").append(toIndentedString(viveWindowsUrl)).append("\n");
    sb.append("    whiteListedAssetUrls: ").append(toIndentedString(whiteListedAssetUrls)).append("\n");
    sb.append("    playerUrlResolverVersion: ").append(toIndentedString(playerUrlResolverVersion)).append("\n");
    sb.append("    playerUrlResolverSha1: ").append(toIndentedString(playerUrlResolverSha1)).append("\n");
    sb.append("    publicKey: ").append(toIndentedString(publicKey)).append("\n");
    sb.append("    websocketMaxFriendsRefreshDelay: ").append(toIndentedString(websocketMaxFriendsRefreshDelay)).append("\n");
    sb.append("    websocketQuickReconnectTime: ").append(toIndentedString(websocketQuickReconnectTime)).append("\n");
    sb.append("    websocketReconnectMaxDelay: ").append(toIndentedString(websocketReconnectMaxDelay)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("VoiceEnableDegradation");
    openapiFields.add("VoiceEnableReceiverLimiting");
    openapiFields.add("accessLogsUrls");
    openapiFields.add("address");
    openapiFields.add("ageVerificationInviteVisible");
    openapiFields.add("ageVerificationP");
    openapiFields.add("ageVerificationStatusVisible");
    openapiFields.add("analysisMaxRetries");
    openapiFields.add("analysisRetryInterval");
    openapiFields.add("announcements");
    openapiFields.add("analyticsSegment_NewUI_PctOfUsers");
    openapiFields.add("analyticsSegment_NewUI_Salt");
    openapiFields.add("availableLanguageCodes");
    openapiFields.add("availableLanguages");
    openapiFields.add("avatarPerfLimiter");
    openapiFields.add("chatboxLogBufferSeconds");
    openapiFields.add("clientApiKey");
    openapiFields.add("clientBPSCeiling");
    openapiFields.add("clientDisconnectTimeout");
    openapiFields.add("clientNetDispatchThread");
    openapiFields.add("clientNetDispatchThreadMobile");
    openapiFields.add("clientNetInThread");
    openapiFields.add("clientNetInThread2");
    openapiFields.add("clientNetInThreadMobile");
    openapiFields.add("clientNetInThreadMobile2");
    openapiFields.add("clientNetOutThread");
    openapiFields.add("clientNetOutThread2");
    openapiFields.add("clientNetOutThreadMobile");
    openapiFields.add("clientNetOutThreadMobile2");
    openapiFields.add("clientQR");
    openapiFields.add("clientReservedPlayerBPS");
    openapiFields.add("clientSentCountAllowance");
    openapiFields.add("constants");
    openapiFields.add("contactEmail");
    openapiFields.add("copyrightEmail");
    openapiFields.add("currentPrivacyVersion");
    openapiFields.add("currentTOSVersion");
    openapiFields.add("defaultAvatar");
    openapiFields.add("defaultStickerSet");
    openapiFields.add("devLanguageCodes");
    openapiFields.add("devSdkUrl");
    openapiFields.add("devSdkVersion");
    openapiFields.add("dis-countdown");
    openapiFields.add("disableAVProInProton");
    openapiFields.add("disableAvatarCopying");
    openapiFields.add("disableAvatarGating");
    openapiFields.add("disableCommunityLabs");
    openapiFields.add("disableCommunityLabsPromotion");
    openapiFields.add("disableEmail");
    openapiFields.add("disableCaptcha");
    openapiFields.add("disableEventStream");
    openapiFields.add("disableFeedbackGating");
    openapiFields.add("disableFrontendBuilds");
    openapiFields.add("disableGiftDrops");
    openapiFields.add("disableHello");
    openapiFields.add("disableOculusSubs");
    openapiFields.add("disableRegistration");
    openapiFields.add("disableSteamNetworking");
    openapiFields.add("disableTwoFactorAuth");
    openapiFields.add("disableUdon");
    openapiFields.add("disableUpgradeAccount");
    openapiFields.add("downloadLinkWindows");
    openapiFields.add("downloadUrls");
    openapiFields.add("dynamicWorldRows");
    openapiFields.add("economyPauseEnd");
    openapiFields.add("economyPauseStart");
    openapiFields.add("economyState");
    openapiFields.add("events");
    openapiFields.add("forceUseLatestWorld");
    openapiFields.add("giftDisplayType");
    openapiFields.add("googleApiClientId");
    openapiFields.add("homeWorldId");
    openapiFields.add("homepageRedirectTarget");
    openapiFields.add("hubWorldId");
    openapiFields.add("imageHostUrlList");
    openapiFields.add("jobsEmail");
    openapiFields.add("minSupportedClientBuildNumber");
    openapiFields.add("minimumUnityVersionForUploads");
    openapiFields.add("moderationEmail");
    openapiFields.add("notAllowedToSelectAvatarInPrivateWorldMessage");
    openapiFields.add("offlineAnalysis");
    openapiFields.add("photonNameserverOverrides");
    openapiFields.add("photonPublicKeys");
    openapiFields.add("reportCategories");
    openapiFields.add("reportFormUrl");
    openapiFields.add("reportOptions");
    openapiFields.add("reportReasons");
    openapiFields.add("requireAgeVerificationBetaTag");
    openapiFields.add("sdkDeveloperFaqUrl");
    openapiFields.add("sdkDiscordUrl");
    openapiFields.add("sdkNotAllowedToPublishMessage");
    openapiFields.add("sdkUnityVersion");
    openapiFields.add("stringHostUrlList");
    openapiFields.add("supportEmail");
    openapiFields.add("supportFormUrl");
    openapiFields.add("timekeeping");
    openapiFields.add("timeOutWorldId");
    openapiFields.add("tutorialWorldId");
    openapiFields.add("updateRateMsMaximum");
    openapiFields.add("updateRateMsMinimum");
    openapiFields.add("updateRateMsNormal");
    openapiFields.add("updateRateMsUdonManual");
    openapiFields.add("uploadAnalysisPercent");
    openapiFields.add("urlList");
    openapiFields.add("useReliableUdpForVoice");
    openapiFields.add("viveWindowsUrl");
    openapiFields.add("whiteListedAssetUrls");
    openapiFields.add("player-url-resolver-version");
    openapiFields.add("player-url-resolver-sha1");
    openapiFields.add("publicKey");
    openapiFields.add("websocketMaxFriendsRefreshDelay");
    openapiFields.add("websocketQuickReconnectTime");
    openapiFields.add("websocketReconnectMaxDelay");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("VoiceEnableDegradation");
    openapiRequiredFields.add("VoiceEnableReceiverLimiting");
    openapiRequiredFields.add("accessLogsUrls");
    openapiRequiredFields.add("address");
    openapiRequiredFields.add("ageVerificationInviteVisible");
    openapiRequiredFields.add("ageVerificationP");
    openapiRequiredFields.add("ageVerificationStatusVisible");
    openapiRequiredFields.add("analysisMaxRetries");
    openapiRequiredFields.add("analysisRetryInterval");
    openapiRequiredFields.add("announcements");
    openapiRequiredFields.add("analyticsSegment_NewUI_PctOfUsers");
    openapiRequiredFields.add("analyticsSegment_NewUI_Salt");
    openapiRequiredFields.add("availableLanguageCodes");
    openapiRequiredFields.add("availableLanguages");
    openapiRequiredFields.add("avatarPerfLimiter");
    openapiRequiredFields.add("chatboxLogBufferSeconds");
    openapiRequiredFields.add("clientApiKey");
    openapiRequiredFields.add("clientBPSCeiling");
    openapiRequiredFields.add("clientDisconnectTimeout");
    openapiRequiredFields.add("clientNetDispatchThreadMobile");
    openapiRequiredFields.add("clientReservedPlayerBPS");
    openapiRequiredFields.add("clientSentCountAllowance");
    openapiRequiredFields.add("constants");
    openapiRequiredFields.add("contactEmail");
    openapiRequiredFields.add("copyrightEmail");
    openapiRequiredFields.add("currentTOSVersion");
    openapiRequiredFields.add("defaultAvatar");
    openapiRequiredFields.add("defaultStickerSet");
    openapiRequiredFields.add("devSdkUrl");
    openapiRequiredFields.add("devSdkVersion");
    openapiRequiredFields.add("dis-countdown");
    openapiRequiredFields.add("disableAvatarCopying");
    openapiRequiredFields.add("disableAvatarGating");
    openapiRequiredFields.add("disableCommunityLabs");
    openapiRequiredFields.add("disableCommunityLabsPromotion");
    openapiRequiredFields.add("disableEmail");
    openapiRequiredFields.add("disableEventStream");
    openapiRequiredFields.add("disableFeedbackGating");
    openapiRequiredFields.add("disableFrontendBuilds");
    openapiRequiredFields.add("disableGiftDrops");
    openapiRequiredFields.add("disableHello");
    openapiRequiredFields.add("disableOculusSubs");
    openapiRequiredFields.add("disableRegistration");
    openapiRequiredFields.add("disableSteamNetworking");
    openapiRequiredFields.add("disableTwoFactorAuth");
    openapiRequiredFields.add("disableUdon");
    openapiRequiredFields.add("disableUpgradeAccount");
    openapiRequiredFields.add("downloadLinkWindows");
    openapiRequiredFields.add("downloadUrls");
    openapiRequiredFields.add("dynamicWorldRows");
    openapiRequiredFields.add("events");
    openapiRequiredFields.add("forceUseLatestWorld");
    openapiRequiredFields.add("giftDisplayType");
    openapiRequiredFields.add("googleApiClientId");
    openapiRequiredFields.add("homeWorldId");
    openapiRequiredFields.add("homepageRedirectTarget");
    openapiRequiredFields.add("hubWorldId");
    openapiRequiredFields.add("imageHostUrlList");
    openapiRequiredFields.add("jobsEmail");
    openapiRequiredFields.add("minSupportedClientBuildNumber");
    openapiRequiredFields.add("minimumUnityVersionForUploads");
    openapiRequiredFields.add("moderationEmail");
    openapiRequiredFields.add("notAllowedToSelectAvatarInPrivateWorldMessage");
    openapiRequiredFields.add("offlineAnalysis");
    openapiRequiredFields.add("photonNameserverOverrides");
    openapiRequiredFields.add("photonPublicKeys");
    openapiRequiredFields.add("reportCategories");
    openapiRequiredFields.add("reportFormUrl");
    openapiRequiredFields.add("reportOptions");
    openapiRequiredFields.add("reportReasons");
    openapiRequiredFields.add("requireAgeVerificationBetaTag");
    openapiRequiredFields.add("sdkDeveloperFaqUrl");
    openapiRequiredFields.add("sdkDiscordUrl");
    openapiRequiredFields.add("sdkNotAllowedToPublishMessage");
    openapiRequiredFields.add("sdkUnityVersion");
    openapiRequiredFields.add("stringHostUrlList");
    openapiRequiredFields.add("supportEmail");
    openapiRequiredFields.add("supportFormUrl");
    openapiRequiredFields.add("timekeeping");
    openapiRequiredFields.add("timeOutWorldId");
    openapiRequiredFields.add("tutorialWorldId");
    openapiRequiredFields.add("updateRateMsMaximum");
    openapiRequiredFields.add("updateRateMsMinimum");
    openapiRequiredFields.add("updateRateMsNormal");
    openapiRequiredFields.add("updateRateMsUdonManual");
    openapiRequiredFields.add("uploadAnalysisPercent");
    openapiRequiredFields.add("urlList");
    openapiRequiredFields.add("useReliableUdpForVoice");
    openapiRequiredFields.add("viveWindowsUrl");
    openapiRequiredFields.add("whiteListedAssetUrls");
    openapiRequiredFields.add("player-url-resolver-version");
    openapiRequiredFields.add("player-url-resolver-sha1");
    openapiRequiredFields.add("publicKey");
    openapiRequiredFields.add("websocketMaxFriendsRefreshDelay");
    openapiRequiredFields.add("websocketQuickReconnectTime");
    openapiRequiredFields.add("websocketReconnectMaxDelay");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to APIConfig
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!APIConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in APIConfig is not found in the empty JSON string", APIConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!APIConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `APIConfig` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : APIConfig.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // validate the required field `accessLogsUrls`
      APIConfigAccessLogsUrls.validateJsonObject(jsonObj.getAsJsonObject("accessLogsUrls"));
      if (!jsonObj.get("address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("announcements").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `announcements` to be an array in the JSON string but got `%s`", jsonObj.get("announcements").toString()));
      }

      JsonArray jsonArrayannouncements = jsonObj.getAsJsonArray("announcements");
      // validate the required field `announcements` (array)
      for (int i = 0; i < jsonArrayannouncements.size(); i++) {
        APIConfigAnnouncement.validateJsonObject(jsonArrayannouncements.get(i).getAsJsonObject());
      };
      if (!jsonObj.get("analyticsSegment_NewUI_Salt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `analyticsSegment_NewUI_Salt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("analyticsSegment_NewUI_Salt").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("availableLanguageCodes") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("availableLanguageCodes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `availableLanguageCodes` to be an array in the JSON string but got `%s`", jsonObj.get("availableLanguageCodes").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("availableLanguages") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("availableLanguages").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `availableLanguages` to be an array in the JSON string but got `%s`", jsonObj.get("availableLanguages").toString()));
      }
      // validate the required field `avatarPerfLimiter`
      APIConfigAvatarPerfLimiter.validateJsonObject(jsonObj.getAsJsonObject("avatarPerfLimiter"));
      if (!jsonObj.get("clientApiKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientApiKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clientApiKey").toString()));
      }
      // validate the required field `constants`
      APIConfigConstants.validateJsonObject(jsonObj.getAsJsonObject("constants"));
      if (!jsonObj.get("contactEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contactEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contactEmail").toString()));
      }
      if (!jsonObj.get("copyrightEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `copyrightEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("copyrightEmail").toString()));
      }
      if (!jsonObj.get("defaultAvatar").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultAvatar` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultAvatar").toString()));
      }
      if (!jsonObj.get("defaultStickerSet").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultStickerSet` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultStickerSet").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("devLanguageCodes") != null && !jsonObj.get("devLanguageCodes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `devLanguageCodes` to be an array in the JSON string but got `%s`", jsonObj.get("devLanguageCodes").toString()));
      }
      if (!jsonObj.get("devSdkUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `devSdkUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("devSdkUrl").toString()));
      }
      if (!jsonObj.get("devSdkVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `devSdkVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("devSdkVersion").toString()));
      }
      if (!jsonObj.get("downloadLinkWindows").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `downloadLinkWindows` to be a primitive type in the JSON string but got `%s`", jsonObj.get("downloadLinkWindows").toString()));
      }
      // validate the required field `downloadUrls`
      APIConfigDownloadURLList.validateJsonObject(jsonObj.getAsJsonObject("downloadUrls"));
      // ensure the json data is an array
      if (!jsonObj.get("dynamicWorldRows").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `dynamicWorldRows` to be an array in the JSON string but got `%s`", jsonObj.get("dynamicWorldRows").toString()));
      }

      JsonArray jsonArraydynamicWorldRows = jsonObj.getAsJsonArray("dynamicWorldRows");
      // validate the required field `dynamicWorldRows` (array)
      for (int i = 0; i < jsonArraydynamicWorldRows.size(); i++) {
        DynamicContentRow.validateJsonObject(jsonArraydynamicWorldRows.get(i).getAsJsonObject());
      };
      if ((jsonObj.get("economyPauseEnd") != null && !jsonObj.get("economyPauseEnd").isJsonNull()) && !jsonObj.get("economyPauseEnd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `economyPauseEnd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("economyPauseEnd").toString()));
      }
      if ((jsonObj.get("economyPauseStart") != null && !jsonObj.get("economyPauseStart").isJsonNull()) && !jsonObj.get("economyPauseStart").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `economyPauseStart` to be a primitive type in the JSON string but got `%s`", jsonObj.get("economyPauseStart").toString()));
      }
      // validate the required field `events`
      APIConfigEvents.validateJsonObject(jsonObj.getAsJsonObject("events"));
      if (!jsonObj.get("giftDisplayType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `giftDisplayType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("giftDisplayType").toString()));
      }
      if (!jsonObj.get("googleApiClientId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `googleApiClientId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("googleApiClientId").toString()));
      }
      if (!jsonObj.get("homeWorldId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `homeWorldId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("homeWorldId").toString()));
      }
      if (!jsonObj.get("homepageRedirectTarget").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `homepageRedirectTarget` to be a primitive type in the JSON string but got `%s`", jsonObj.get("homepageRedirectTarget").toString()));
      }
      if (!jsonObj.get("hubWorldId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hubWorldId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hubWorldId").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("imageHostUrlList") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("imageHostUrlList").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `imageHostUrlList` to be an array in the JSON string but got `%s`", jsonObj.get("imageHostUrlList").toString()));
      }
      if (!jsonObj.get("jobsEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobsEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobsEmail").toString()));
      }
      // validate the required field `minSupportedClientBuildNumber`
      APIConfigMinSupportedClientBuildNumber.validateJsonObject(jsonObj.getAsJsonObject("minSupportedClientBuildNumber"));
      if (!jsonObj.get("minimumUnityVersionForUploads").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `minimumUnityVersionForUploads` to be a primitive type in the JSON string but got `%s`", jsonObj.get("minimumUnityVersionForUploads").toString()));
      }
      if (!jsonObj.get("moderationEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `moderationEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("moderationEmail").toString()));
      }
      if (!jsonObj.get("notAllowedToSelectAvatarInPrivateWorldMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notAllowedToSelectAvatarInPrivateWorldMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notAllowedToSelectAvatarInPrivateWorldMessage").toString()));
      }
      // validate the required field `offlineAnalysis`
      APIConfigOfflineAnalysis.validateJsonObject(jsonObj.getAsJsonObject("offlineAnalysis"));
      // ensure the required json array is present
      if (jsonObj.get("photonNameserverOverrides") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("photonNameserverOverrides").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `photonNameserverOverrides` to be an array in the JSON string but got `%s`", jsonObj.get("photonNameserverOverrides").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("photonPublicKeys") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("photonPublicKeys").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `photonPublicKeys` to be an array in the JSON string but got `%s`", jsonObj.get("photonPublicKeys").toString()));
      }
      // validate the required field `reportCategories`
      APIConfigReportCategories.validateJsonObject(jsonObj.getAsJsonObject("reportCategories"));
      if (!jsonObj.get("reportFormUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reportFormUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reportFormUrl").toString()));
      }
      // validate the required field `reportOptions`
      APIConfigReportOptions.validateJsonObject(jsonObj.getAsJsonObject("reportOptions"));
      // validate the required field `reportReasons`
      APIConfigReportReasons.validateJsonObject(jsonObj.getAsJsonObject("reportReasons"));
      if (!jsonObj.get("sdkDeveloperFaqUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sdkDeveloperFaqUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sdkDeveloperFaqUrl").toString()));
      }
      if (!jsonObj.get("sdkDiscordUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sdkDiscordUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sdkDiscordUrl").toString()));
      }
      if (!jsonObj.get("sdkNotAllowedToPublishMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sdkNotAllowedToPublishMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sdkNotAllowedToPublishMessage").toString()));
      }
      if (!jsonObj.get("sdkUnityVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sdkUnityVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sdkUnityVersion").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("stringHostUrlList") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("stringHostUrlList").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `stringHostUrlList` to be an array in the JSON string but got `%s`", jsonObj.get("stringHostUrlList").toString()));
      }
      if (!jsonObj.get("supportEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supportEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supportEmail").toString()));
      }
      if (!jsonObj.get("supportFormUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supportFormUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supportFormUrl").toString()));
      }
      if (!jsonObj.get("timeOutWorldId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timeOutWorldId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timeOutWorldId").toString()));
      }
      if (!jsonObj.get("tutorialWorldId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tutorialWorldId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tutorialWorldId").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("urlList") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("urlList").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `urlList` to be an array in the JSON string but got `%s`", jsonObj.get("urlList").toString()));
      }
      if (!jsonObj.get("viveWindowsUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `viveWindowsUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("viveWindowsUrl").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("whiteListedAssetUrls") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("whiteListedAssetUrls").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `whiteListedAssetUrls` to be an array in the JSON string but got `%s`", jsonObj.get("whiteListedAssetUrls").toString()));
      }
      if (!jsonObj.get("player-url-resolver-version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `player-url-resolver-version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("player-url-resolver-version").toString()));
      }
      if (!jsonObj.get("player-url-resolver-sha1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `player-url-resolver-sha1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("player-url-resolver-sha1").toString()));
      }
      if (!jsonObj.get("publicKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publicKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publicKey").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!APIConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'APIConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<APIConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(APIConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<APIConfig>() {
           @Override
           public void write(JsonWriter out, APIConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public APIConfig read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of APIConfig given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of APIConfig
  * @throws IOException if the JSON string is invalid with respect to APIConfig
  */
  public static APIConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, APIConfig.class);
  }

 /**
  * Convert an instance of APIConfig to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

